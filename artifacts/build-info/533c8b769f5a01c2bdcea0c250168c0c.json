{
	"id": "533c8b769f5a01c2bdcea0c250168c0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"DEXLogic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {IUNIFORK} from \"./uniForkInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract PathFinding{\n    address constant public uniswapV2Router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\n    address constant public sushiswapV2Router = 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F;\n\n    address public WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    address public USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n    address public USDT = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\n    address public DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address public OHM = 0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5;\n\n    address[] public dex = [uniswapV2Router,sushiswapV2Router];\n\n    address[] public path = [WETH,OHM];\n    address [][] public allPath;\n\n    constructor(){\n        allPath.push([WETH,USDC]);\n        allPath.push([USDC,USDT]);\n        allPath.push([USDT,DAI]);\n        allPath.push([DAI,OHM]);\n    }\n\n\n    function getPrice()public view returns(uint256){\n        uint256 bestValue;\n        for(uint256 i=0; i<path.length; i++){\n            if(IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1]>bestValue){\n                bestValue = IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1];\n            }\n            else{bestValue=bestValue;}\n        }\n            return (bestValue);\n    }\n\n    function getBestPriceWithPaths()public view returns(uint256,uint256,uint256){\n         \n        uint256 bestValue;\n        uint256 tempVal;\n        for(uint256 i; i<allPath.length; i++){\n            for(uint256 j=0; j<dex.length; j++){\n\n                if(i==0){\n                    uint256 tempVal2 = IUNIFORK(dex[j]).getAmountsOut(1e18,allPath[i])[1];\n                    if(tempVal2>tempVal){\n                        tempVal=tempVal2;\n                    }\n                }\n                else{\n                    uint256 tempVal2 = IUNIFORK(dex[j]).getAmountsOut(tempVal,allPath[i])[1];\n                    if(tempVal2>tempVal){\n                        bestValue = tempVal;\n                        tempVal=tempVal2;\n                    }\n                    else if(tempVal2>tempVal){\n                        bestValue = tempVal;\n                        tempVal=tempVal;\n                    }\n                }\n                \n            // bestValue = tempVal;\n            }\n        }\n        uint256 one = IUNIFORK(dex[1]).getAmountsOut(1e18,allPath[0])[1];\n        uint256 two = IUNIFORK(dex[1]).getAmountsOut(one,allPath[1])[1];\n        uint256 three = IUNIFORK(dex[1]).getAmountsOut(two,allPath[2])[1];\n        uint256 four = IUNIFORK(dex[1]).getAmountsOut(three,allPath[3])[1];\n        // return(finalVal,IUNIFORK(dex[0]).getAmountsOut(1e18,path)[1]);\n        return(bestValue,four,IUNIFORK(dex[1]).getAmountsOut(1e18,path)[1]);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"uniForkInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.18;\n\ninterface IUNIFORK{\n    function getAmountsOut(uint amountIn, \n      address[] memory path)\n      external \n      view \n      returns (uint[] memory amounts);\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2050:2055  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2047  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2042:2055  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2075:2082  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2082  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1976:2089  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1401:13011  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3341  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3242:3348  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3173:3175  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3091:3182  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3480:3487  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3506:3524  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3406:3531  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2208:2221  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2240:2245  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2233:2245  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2154:2252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4514:4518  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4584:4591  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4599  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4576  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4568:4600  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4617:4621  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4610:4621  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4431:4628  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5321  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5389:5393  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5410  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5388  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5373:5411  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5431:5435  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5437:5439  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5441:5447  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5430  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5448  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5465:5469  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5190:5476  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:6105  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5959:5963  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6066:6076  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6029:6036  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6047  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6063  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6038:6076  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6021  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6013:6077  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2365:2467  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2421:2434  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2453:2460  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2446:2460  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:7019  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6685:6689  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6783:6790  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6775  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6791  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6739:6791  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6829:6844  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6825  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6809:6844  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6801:6886  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6929:6934  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6936:6943  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:6979  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6961  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6945:6979  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6928  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6920:6980  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3916  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3806:3810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3877:3879  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3887  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3869  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3860:3888  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4063:4070  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4100  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4107  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4089:4116  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3974:4123  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10635:10654  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10695  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10713:10734  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10705:10773  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10795  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10802  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10811  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10820  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10867  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10874  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11309  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11322:11327  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11329:11336  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11321  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11312:11337  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11285:11337  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11367  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11351:11388  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11347:11590  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11438  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11428  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11412:11438  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11404:11472  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11523:11528  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11530:11537  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11558:11564  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11555  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11539:11564  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11522  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11565  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11275:11596  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11155:11596  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7473:8291  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7599:7617  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7591:7659  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7677:7693  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7733  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7812  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7815:7830  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7869  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7840:7912  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7955  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7961  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7984  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7946:7984  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8184  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8161:8174  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8210:8236  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8284  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12180:12301  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa264697066735822122075cb8410e2d70fc70e9716639fd2bda4b36dfecbcf01c4d0a9155fe53a5b93f964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:6"
															},
															"nodeType": "YulIf",
															"src": "353:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:6"
															},
															"nodeType": "YulIf",
															"src": "536:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:6"
															},
															"nodeType": "YulIf",
															"src": "698:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:6"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:6"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:6",
																"statements": []
															},
															"src": "779:133:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:840:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:6"
															},
															"nodeType": "YulIf",
															"src": "1119:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:6"
															},
															"nodeType": "YulIf",
															"src": "1256:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:6"
															},
															"nodeType": "YulIf",
															"src": "1429:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:6",
														"type": ""
													}
												],
												"src": "991:562:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:6"
															},
															"nodeType": "YulIf",
															"src": "1701:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:6"
															},
															"nodeType": "YulIf",
															"src": "1771:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:6",
														"type": ""
													}
												],
												"src": "1558:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:6",
														"type": ""
													}
												],
												"src": "1943:121:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:6",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:6"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:6"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:6"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:6"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:6",
																			"statements": []
																		},
																		"src": "2516:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:6"
															},
															"nodeType": "YulIf",
															"src": "2160:448:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:6",
														"type": ""
													}
												],
												"src": "2069:545:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:6",
														"type": ""
													}
												],
												"src": "2619:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:6"
															},
															"nodeType": "YulIf",
															"src": "2929:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:6",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:6"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:6",
																					"statements": []
																				},
																				"src": "3376:236:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:6"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:6"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:6",
														"type": ""
													}
												],
												"src": "2790:1352:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122075cb8410e2d70fc70e9716639fd2bda4b36dfecbcf01c4d0a9155fe53a5b93f964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xCB8410E2D70FC70E9716639FD2BDA4B36DFECBCF01C4 0xD0 0xA9 ISZERO 0x5F 0xE5 GASPRICE JUMPDEST SWAP4 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1401:11610:0:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:5;:13;2050:5;2042;:13;:::i;:::-;-1:-1:-1;2065:7:0;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;1401:11610;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:6:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:6;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:6;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:6;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:6;;;3992:26;3943:89;-1:-1:-1;;2747:1:6;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:6;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:6;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:6;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:6:o;:::-;1401:11610:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 858,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": null,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_701": {
									"entryPoint": null,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_563": {
									"entryPoint": 1150,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1272,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 815,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 562,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 673,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 624,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 416,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 658,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 588,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 801,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:6"
															},
															"nodeType": "YulIf",
															"src": "664:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:6",
														"type": ""
													}
												],
												"src": "567:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:6"
															},
															"nodeType": "YulIf",
															"src": "842:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:6",
														"type": ""
													}
												],
												"src": "745:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:6",
														"type": ""
													}
												],
												"src": "1004:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:6",
														"type": ""
													}
												],
												"src": "1196:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:6"
															},
															"nodeType": "YulIf",
															"src": "1492:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:6",
														"type": ""
													}
												],
												"src": "1378:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:6",
														"type": ""
													}
												],
												"src": "1711:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:6"
															},
															"nodeType": "YulIf",
															"src": "1980:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:6",
														"type": ""
													}
												],
												"src": "1900:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:6"
															},
															"nodeType": "YulIf",
															"src": "2188:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:6",
														"type": ""
													}
												],
												"src": "2091:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:6"
															},
															"nodeType": "YulIf",
															"src": "2499:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:6"
															},
															"nodeType": "YulIf",
															"src": "2569:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:6",
														"type": ""
													}
												],
												"src": "2356:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:6"
															},
															"nodeType": "YulIf",
															"src": "2824:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:6",
														"type": ""
													}
												],
												"src": "2741:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:6",
														"type": ""
													}
												],
												"src": "2968:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:6",
														"type": ""
													}
												],
												"src": "3374:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:6",
														"type": ""
													}
												],
												"src": "3779:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:6",
														"type": ""
													}
												],
												"src": "4182:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:6",
														"type": ""
													}
												],
												"src": "4540:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:6",
														"type": ""
													}
												],
												"src": "4946:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:6",
														"type": ""
													}
												],
												"src": "5350:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122075cb8410e2d70fc70e9716639fd2bda4b36dfecbcf01c4d0a9155fe53a5b93f964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xCB8410E2D70FC70E9716639FD2BDA4B36DFECBCF01C4 0xD0 0xA9 ISZERO 0x5F 0xE5 GASPRICE JUMPDEST SWAP4 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "1401:11610:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;4431:197:0;1004:187:6;3242:106:0;3329:12;;3242:106;;;1342:25:6;;;1330:2;1315:18;3242:106:0;1196:177:6;5190:286:0;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1853:36:6;;1841:2;1826:18;3091:91:0;1711:184:6;5871:234:0;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:0;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:3;4568:32:0;719:10:3;4584:7:0;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:3;5373:38:0;5389:4;719:10:3;5404:6:0;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:0;;5190:286;-1:-1:-1;;;;5190:286:0:o;5871:234::-;5959:4;719:10:3;6013:64:0;719:10:3;6029:7:0;6066:10;6038:25;719:10:3;6029:7:0;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:3;6685:4:0;6766:25;719:10:3;6783:7:0;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:0;;3170:2:6;6801:85:0;;;3152:21:6;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:6;;;3292:35;3344:19;;6801:85:0;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:3;3860:28:0;719:10:3;3877:2:0;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:0;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:0;;10627:68;;;;-1:-1:-1;;;10627:68:0;;3576:2:6;10627:68:0;;;3558:21:6;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:6;;;3698:34;3749:19;;10627:68:0;3374:400:6;10627:68:0;-1:-1:-1;;;;;10713:21:0;;10705:68;;;;-1:-1:-1;;;10705:68:0;;3981:2:6;10705:68:0;;;3963:21:6;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:6;;;4103:32;4152:19;;10705:68:0;3779:398:6;10705:68:0;-1:-1:-1;;;;;10784:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:6;;;10835:32:0;;1315:18:6;10835:32:0;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:0;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:0;;4384:2:6;11404:68:0;;;4366:21:6;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11404:68:0;4182:353:6;11404:68:0;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:0;;7591:68;;;;-1:-1:-1;;;7591:68:0;;4742:2:6;7591:68:0;;;4724:21:6;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:6;;;4864:35;4916:19;;7591:68:0;4540:401:6;7591:68:0;-1:-1:-1;;;;;7677:16:0;;7669:64;;;;-1:-1:-1;;;7669:64:0;;5148:2:6;7669:64:0;;;5130:21:6;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:6;;;5270:33;5320:19;;7669:64:0;4946:399:6;7669:64:0;-1:-1:-1;;;;;7815:15:0;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:0;;5552:2:6;7840:72:0;;;5534:21:6;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:6;;;5674:36;5727:19;;7840:72:0;5350:402:6;7840:72:0;-1:-1:-1;;;;;7946:15:0;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1342:25:6;;;8161:13:0;;8210:26;;1315:18:6;8210:26:0;;;;;;;8247:37;12180:121;14:548:6;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:6:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1976,
									"end": 2089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2047,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2042,
									"end": 2055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2042,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2075,
									"end": 2082,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2065,
									"end": 2082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2065,
									"end": 2082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1976,
									"end": 2089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13011,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075cb8410e2d70fc70e9716639fd2bda4b36dfecbcf01c4d0a9155fe53a5b93f964736f6c63430008120033",
									".code": [
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3531,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2240,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2233,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4568,
											"end": 4600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4568,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4610,
											"end": 4621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4431,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5410,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5373,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5373,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5421,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5465,
											"end": 5469,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5476,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5871,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6013,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6038,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6038,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6038,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6013,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2446,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6592,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6766,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6766,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6829,
											"end": 6844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6801,
											"end": 6886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6929,
											"end": 6934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6943,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6964,
											"end": 6979,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 6961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6920,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6920,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3727,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3860,
											"end": 3888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3974,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4100,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 4123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10635,
											"end": 10654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10627,
											"end": 10695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10713,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10705,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10784,
											"end": 10820,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10835,
											"end": 10867,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11312,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11312,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11285,
											"end": 11337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11351,
											"end": 11388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11347,
											"end": 11590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11412,
											"end": 11438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11404,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11530,
											"end": 11537,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11514,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11514,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11155,
											"end": 11596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7473,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7591,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7840,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7946,
											"end": 7984,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8184,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8161,
											"end": 8174,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8236,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12180,
											"end": 12301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEXLogic.sol",
								"uniForkInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DEXLogic.sol": {
				"PathFinding": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "DAI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OHM",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPath",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "dex",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBestPriceWithPaths",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "path",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sushiswapV2Router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DEXLogic.sol\":373:437  address public WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"DEXLogic.sol\":395:437  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n  0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n    /* \"DEXLogic.sol\":373:437  address public WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"DEXLogic.sol\":443:507  address public USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n  dup1\n  sload\n  dup3\n  and\n    /* \"DEXLogic.sol\":465:507  0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n  0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\n    /* \"DEXLogic.sol\":443:507  address public USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n  or\n  swap1\n  sstore\n    /* \"DEXLogic.sol\":513:577  address public USDT = 0xdAC17F958D2ee523a2206206994597C13D831ec7 */\n  0x02\n  dup1\n  sload\n  dup3\n  and\n    /* \"DEXLogic.sol\":535:577  0xdAC17F958D2ee523a2206206994597C13D831ec7 */\n  0xdac17f958d2ee523a2206206994597c13d831ec7\n    /* \"DEXLogic.sol\":513:577  address public USDT = 0xdAC17F958D2ee523a2206206994597C13D831ec7 */\n  or\n  dup2\n  sstore\n    /* \"DEXLogic.sol\":583:646  address public DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n  0x03\n  dup1\n  sload\n  dup4\n  and\n    /* \"DEXLogic.sol\":604:646  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n  0x6b175474e89094c44da98b954eedeac495271d0f\n    /* \"DEXLogic.sol\":583:646  address public DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n  or\n  swap1\n  sstore\n    /* \"DEXLogic.sol\":652:715  address public OHM = 0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5 */\n  0x04\n  dup1\n  sload\n  swap1\n  swap3\n  and\n    /* \"DEXLogic.sol\":673:715  0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5 */\n  0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5\n    /* \"DEXLogic.sol\":652:715  address public OHM = 0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5 */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"DEXLogic.sol\":722:780  address[] public dex = [uniswapV2Router,sushiswapV2Router] */\n  0xc0\n    /* \"DEXLogic.sol\":164:2850  contract PathFinding{... */\n  0x40\n    /* \"DEXLogic.sol\":722:780  address[] public dex = [uniswapV2Router,sushiswapV2Router] */\n  mstore\n    /* \"DEXLogic.sol\":232:274  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n  0x7a250d5630b4cf539739df2c5dacb4c659f2488d\n    /* \"DEXLogic.sol\":164:2850  contract PathFinding{... */\n  0x80\n    /* \"DEXLogic.sol\":722:780  address[] public dex = [uniswapV2Router,sushiswapV2Router] */\n  swap1\n  dup2\n  mstore\n    /* \"DEXLogic.sol\":324:366  0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F */\n  0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\n    /* \"DEXLogic.sol\":722:780  address[] public dex = [uniswapV2Router,sushiswapV2Router] */\n  0xa0\n  mstore\n  tag_1\n  swap2\n  0x05\n  swap2\n    /* \"DEXLogic.sol\":164:2850  contract PathFinding{... */\n  swap1\n    /* \"DEXLogic.sol\":722:780  address[] public dex = [uniswapV2Router,sushiswapV2Router] */\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"DEXLogic.sol\":787:821  address[] public path = [WETH,OHM] */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x00\n    /* \"DEXLogic.sol\":812:816  WETH */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"DEXLogic.sol\":787:821  address[] public path = [WETH,OHM] */\n  dup3\n  mstore\n    /* \"DEXLogic.sol\":817:820  OHM */\n  sload(0x04)\n  and\n    /* \"DEXLogic.sol\":787:821  address[] public path = [WETH,OHM] */\n  0x20\n  dup3\n  add\n  mstore\n  tag_3\n  swap1\n  0x06\n  swap1\n  0x02\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"DEXLogic.sol\":861:1018  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"DEXLogic.sol\":884:909  allPath.push([WETH,USDC]) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x00\n    /* \"DEXLogic.sol\":898:902  WETH */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"DEXLogic.sol\":884:909  allPath.push([WETH,USDC]) */\n  dup4\n  mstore\n    /* \"DEXLogic.sol\":898:902  WETH */\n  0x01\n    /* \"DEXLogic.sol\":903:907  USDC */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"DEXLogic.sol\":884:909  allPath.push([WETH,USDC]) */\n  0x20\n  dup5\n  add\n  mstore\n    /* \"DEXLogic.sol\":884:891  allPath */\n  0x07\n    /* \"DEXLogic.sol\":884:909  allPath.push([WETH,USDC]) */\n  dup1\n  sload\n  swap2\n  dup3\n  add\n  dup2\n  sstore\n  swap1\n  swap2\n  mstore\n  tag_8\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_607bca8f7c1c56da874da29cd62c3769b9880d38a258a91fc6dd1cfb6b4d1a8e\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap1\n  swap2\n  add\n  swap1\n  0x02\n  tag_2\n  jump\t// in\ntag_8:\n  pop\n    /* \"DEXLogic.sol\":919:944  allPath.push([USDC,USDT]) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n    /* \"DEXLogic.sol\":933:937  USDC */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"DEXLogic.sol\":919:944  allPath.push([USDC,USDT]) */\n  dup4\n  mstore\n    /* \"DEXLogic.sol\":938:942  USDT */\n  0x02\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"DEXLogic.sol\":919:944  allPath.push([USDC,USDT]) */\n  0x20\n  dup5\n  add\n  mstore\n    /* \"DEXLogic.sol\":919:926  allPath */\n  0x07\n    /* \"DEXLogic.sol\":919:944  allPath.push([USDC,USDT]) */\n  dup1\n  sload\n  swap3\n  dup4\n  add\n  dup2\n  sstore\n  0x00\n  mstore\n  tag_10\n  swap3\n  0x00\n  dup1\n  mload\n  0x20\n  data_607bca8f7c1c56da874da29cd62c3769b9880d38a258a91fc6dd1cfb6b4d1a8e\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap1\n  swap3\n  add\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_10:\n  pop\n    /* \"DEXLogic.sol\":954:978  allPath.push([USDT,DAI]) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n    /* \"DEXLogic.sol\":968:972  USDT */\n  0x02\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"DEXLogic.sol\":954:978  allPath.push([USDT,DAI]) */\n  dup4\n  mstore\n    /* \"DEXLogic.sol\":973:976  DAI */\n  sload(0x03)\n  and\n    /* \"DEXLogic.sol\":954:978  allPath.push([USDT,DAI]) */\n  0x20\n  dup4\n  add\n  mstore\n    /* \"DEXLogic.sol\":954:961  allPath */\n  0x07\n    /* \"DEXLogic.sol\":954:978  allPath.push([USDT,DAI]) */\n  dup1\n  sload\n    /* \"DEXLogic.sol\":968:972  USDT */\n  0x01\n    /* \"DEXLogic.sol\":954:978  allPath.push([USDT,DAI]) */\n  dup2\n  add\n  dup3\n  sstore\n  0x00\n  swap2\n  swap1\n  swap2\n  mstore\n  tag_12\n  swap3\n  0x00\n  dup1\n  mload\n  0x20\n  data_607bca8f7c1c56da874da29cd62c3769b9880d38a258a91fc6dd1cfb6b4d1a8e\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap1\n  swap2\n  add\n  swap2\n  tag_2\n  jump\t// in\ntag_12:\n  pop\n    /* \"DEXLogic.sol\":988:1011  allPath.push([DAI,OHM]) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n    /* \"DEXLogic.sol\":1002:1005  DAI */\n  sload(0x03)\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"DEXLogic.sol\":988:1011  allPath.push([DAI,OHM]) */\n  dup3\n  mstore\n    /* \"DEXLogic.sol\":1006:1009  OHM */\n  sload(0x04)\n  and\n    /* \"DEXLogic.sol\":988:1011  allPath.push([DAI,OHM]) */\n  0x20\n  dup3\n  add\n  mstore\n    /* \"DEXLogic.sol\":988:995  allPath */\n  0x07\n    /* \"DEXLogic.sol\":988:1011  allPath.push([DAI,OHM]) */\n  dup1\n  sload\n    /* \"DEXLogic.sol\":1002:1005  DAI */\n  0x01\n    /* \"DEXLogic.sol\":988:1011  allPath.push([DAI,OHM]) */\n  dup2\n  add\n  dup3\n  sstore\n  0x00\n  swap2\n  swap1\n  swap2\n  mstore\n  tag_14\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_607bca8f7c1c56da874da29cd62c3769b9880d38a258a91fc6dd1cfb6b4d1a8e\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  swap1\n  swap2\n  add\n  swap1\n  0x02\n  tag_2\n  jump\t// in\ntag_14:\n  pop\n    /* \"DEXLogic.sol\":164:2850  contract PathFinding{... */\n  jump(tag_15)\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n  dup3\n  sstore\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  0x01\n  swap1\n  swap2\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_607bca8f7c1c56da874da29cd62c3769b9880d38a258a91fc6dd1cfb6b4d1a8e a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n\nsub_0: assembly {\n        /* \"DEXLogic.sol\":164:2850  contract PathFinding{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x98d5fdca\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa6c41fec\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaf6d1fe4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe0bab4c4\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x1694505e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24d16c1a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38c6cdd5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x46fab9e9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70b5180d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DEXLogic.sol\":190:274  address constant public uniswapV2Router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n    tag_3:\n      tag_16\n        /* \"DEXLogic.sol\":232:274  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n      0x7a250d5630b4cf539739df2c5dacb4c659f2488d\n        /* \"DEXLogic.sol\":190:274  address constant public uniswapV2Router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"DEXLogic.sol\":190:274  address constant public uniswapV2Router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DEXLogic.sol\":722:780  address[] public dex = [uniswapV2Router,sushiswapV2Router] */\n    tag_4:\n      tag_16\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \"DEXLogic.sol\":280:366  address constant public sushiswapV2Router = 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F */\n    tag_5:\n      tag_16\n        /* \"DEXLogic.sol\":324:366  0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F */\n      0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\n        /* \"DEXLogic.sol\":280:366  address constant public sushiswapV2Router = 0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F */\n      dup2\n      jump\n        /* \"DEXLogic.sol\":827:854  address [][] public allPath */\n    tag_6:\n      tag_16\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"DEXLogic.sol\":1399:2848  function getBestPriceWithPaths()public view returns(uint256,uint256,uint256){... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":862:887   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":918:920   */\n      0x20\n        /* \"#utility.yul\":903:921   */\n      dup5\n      add\n        /* \"#utility.yul\":896:930   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":946:964   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":939:973   */\n      mstore\n        /* \"#utility.yul\":850:852   */\n      0x60\n        /* \"#utility.yul\":835:853   */\n      add\n        /* \"DEXLogic.sol\":1399:2848  function getBestPriceWithPaths()public view returns(uint256,uint256,uint256){... */\n      tag_18\n        /* \"#utility.yul\":660:979   */\n      jump\n        /* \"DEXLogic.sol\":443:507  address public USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 */\n    tag_8:\n      sload(0x01)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DEXLogic.sol\":1025:1393  function getPrice()public view returns(uint256){... */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1130:1155   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"DEXLogic.sol\":1025:1393  function getPrice()public view returns(uint256){... */\n      tag_18\n        /* \"#utility.yul\":984:1161   */\n      jump\n        /* \"DEXLogic.sol\":652:715  address public OHM = 0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5 */\n    tag_10:\n      sload(0x04)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DEXLogic.sol\":373:437  address public WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n    tag_11:\n      sload(0x00)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DEXLogic.sol\":787:821  address[] public path = [WETH,OHM] */\n    tag_12:\n      tag_16\n      tag_51\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"DEXLogic.sol\":513:577  address public USDT = 0xdAC17F958D2ee523a2206206994597C13D831ec7 */\n    tag_13:\n      sload(0x02)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DEXLogic.sol\":583:646  address public DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F */\n    tag_14:\n      sload(0x03)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DEXLogic.sol\":722:780  address[] public dex = [uniswapV2Router,sushiswapV2Router] */\n    tag_23:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"DEXLogic.sol\":827:854  address [][] public allPath */\n    tag_31:\n      0x07\n      dup3\n      dup2\n      sload\n      dup2\n      lt\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      dup3\n      swap1\n      pop\n      jump\t// out\n        /* \"DEXLogic.sol\":1399:2848  function getBestPriceWithPaths()public view returns(uint256,uint256,uint256){... */\n    tag_34:\n        /* \"DEXLogic.sol\":1451:1458  uint256 */\n      0x00\n        /* \"DEXLogic.sol\":1459:1466  uint256 */\n      dup1\n        /* \"DEXLogic.sol\":1467:1474  uint256 */\n      0x00\n        /* \"DEXLogic.sol\":1495:1512  uint256 bestValue */\n      dup1\n        /* \"DEXLogic.sol\":1522:1537  uint256 tempVal */\n      0x00\n        /* \"DEXLogic.sol\":1551:1560  uint256 i */\n      dup1\n        /* \"DEXLogic.sol\":1547:2393  for(uint256 i; i<allPath.length; i++){... */\n    tag_67:\n        /* \"DEXLogic.sol\":1564:1571  allPath */\n      0x07\n        /* \"DEXLogic.sol\":1564:1578  allPath.length */\n      sload\n        /* \"DEXLogic.sol\":1562:1578  i<allPath.length */\n      dup2\n      lt\n        /* \"DEXLogic.sol\":1547:2393  for(uint256 i; i<allPath.length; i++){... */\n      iszero\n      tag_68\n      jumpi\n        /* \"DEXLogic.sol\":1602:1611  uint256 j */\n      0x00\n        /* \"DEXLogic.sol\":1598:2383  for(uint256 j=0; j<dex.length; j++){... */\n    tag_70:\n        /* \"DEXLogic.sol\":1617:1620  dex */\n      0x05\n        /* \"DEXLogic.sol\":1617:1627  dex.length */\n      sload\n        /* \"DEXLogic.sol\":1615:1627  j<dex.length */\n      dup2\n      lt\n        /* \"DEXLogic.sol\":1598:2383  for(uint256 j=0; j<dex.length; j++){... */\n      iszero\n      tag_71\n      jumpi\n        /* \"DEXLogic.sol\":1655:1656  i */\n      dup2\n        /* \"DEXLogic.sol\":1658:1659  0 */\n      0x00\n        /* \"DEXLogic.sol\":1655:1659  i==0 */\n      sub\n        /* \"DEXLogic.sol\":1652:2316  if(i==0){... */\n      tag_73\n      jumpi\n        /* \"DEXLogic.sol\":1682:1698  uint256 tempVal2 */\n      0x00\n        /* \"DEXLogic.sol\":1710:1713  dex */\n      0x05\n        /* \"DEXLogic.sol\":1714:1715  j */\n      dup3\n        /* \"DEXLogic.sol\":1710:1716  dex[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_75\n      jumpi\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":1737:1744  allPath */\n      0x07\n        /* \"DEXLogic.sol\":1737:1747  allPath[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":1710:1716  dex[j] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"DEXLogic.sol\":1701:1731  IUNIFORK(dex[j]).getAmountsOut */\n      0xd06ca61f\n      swap2\n        /* \"DEXLogic.sol\":1732:1736  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"DEXLogic.sol\":1745:1746  i */\n      dup8\n      swap1\n        /* \"DEXLogic.sol\":1737:1747  allPath[i] */\n      dup2\n      lt\n      tag_79\n      jumpi\n      tag_79\n      tag_76\n      jump\t// in\n    tag_79:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"DEXLogic.sol\":1701:1748  IUNIFORK(dex[j]).getAmountsOut(1e18,allPath[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_85\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"DEXLogic.sol\":1749:1750  1 */\n      0x01\n        /* \"DEXLogic.sol\":1701:1751  IUNIFORK(dex[j]).getAmountsOut(1e18,allPath[i])[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_88\n      tag_76\n      jump\t// in\n    tag_88:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":1682:1751  uint256 tempVal2 = IUNIFORK(dex[j]).getAmountsOut(1e18,allPath[i])[1] */\n      swap1\n      pop\n        /* \"DEXLogic.sol\":1785:1792  tempVal */\n      dup4\n        /* \"DEXLogic.sol\":1776:1784  tempVal2 */\n      dup2\n        /* \"DEXLogic.sol\":1776:1792  tempVal2>tempVal */\n      gt\n        /* \"DEXLogic.sol\":1773:1858  if(tempVal2>tempVal){... */\n      iszero\n      tag_89\n      jumpi\n        /* \"DEXLogic.sol\":1827:1835  tempVal2 */\n      dup1\n        /* \"DEXLogic.sol\":1819:1835  tempVal=tempVal2 */\n      swap4\n      pop\n        /* \"DEXLogic.sol\":1773:1858  if(tempVal2>tempVal){... */\n    tag_89:\n        /* \"DEXLogic.sol\":1660:1876  {... */\n      pop\n        /* \"DEXLogic.sol\":1652:2316  if(i==0){... */\n      jump(tag_90)\n    tag_73:\n        /* \"DEXLogic.sol\":1919:1935  uint256 tempVal2 */\n      0x00\n        /* \"DEXLogic.sol\":1947:1950  dex */\n      0x05\n        /* \"DEXLogic.sol\":1951:1952  j */\n      dup3\n        /* \"DEXLogic.sol\":1947:1953  dex[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_92\n      tag_76\n      jump\t// in\n    tag_92:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":1977:1984  allPath */\n      0x07\n        /* \"DEXLogic.sol\":1977:1987  allPath[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":1947:1953  dex[j] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"DEXLogic.sol\":1938:1968  IUNIFORK(dex[j]).getAmountsOut */\n      0xd06ca61f\n      swap2\n        /* \"DEXLogic.sol\":1969:1976  tempVal */\n      dup8\n      swap2\n        /* \"DEXLogic.sol\":1985:1986  i */\n      dup8\n      swap1\n        /* \"DEXLogic.sol\":1977:1987  allPath[i] */\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_95\n      tag_76\n      jump\t// in\n    tag_95:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"DEXLogic.sol\":1938:1988  IUNIFORK(dex[j]).getAmountsOut(tempVal,allPath[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_97:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_101\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_101:\n        /* \"DEXLogic.sol\":1989:1990  1 */\n      0x01\n        /* \"DEXLogic.sol\":1938:1991  IUNIFORK(dex[j]).getAmountsOut(tempVal,allPath[i])[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_103\n      jumpi\n      tag_103\n      tag_76\n      jump\t// in\n    tag_103:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":1919:1991  uint256 tempVal2 = IUNIFORK(dex[j]).getAmountsOut(tempVal,allPath[i])[1] */\n      swap1\n      pop\n        /* \"DEXLogic.sol\":2025:2032  tempVal */\n      dup4\n        /* \"DEXLogic.sol\":2016:2024  tempVal2 */\n      dup2\n        /* \"DEXLogic.sol\":2016:2032  tempVal2>tempVal */\n      gt\n        /* \"DEXLogic.sol\":2013:2298  if(tempVal2>tempVal){... */\n      iszero\n      tag_104\n      jumpi\n        /* \"DEXLogic.sol\":2071:2078  tempVal */\n      swap3\n      swap4\n      pop\n        /* \"DEXLogic.sol\":2112:2120  tempVal2 */\n      dup3\n        /* \"DEXLogic.sol\":2013:2298  if(tempVal2>tempVal){... */\n      jump(tag_106)\n    tag_104:\n        /* \"DEXLogic.sol\":2181:2188  tempVal */\n      dup4\n        /* \"DEXLogic.sol\":2172:2180  tempVal2 */\n      dup2\n        /* \"DEXLogic.sol\":2172:2188  tempVal2>tempVal */\n      gt\n        /* \"DEXLogic.sol\":2169:2298  if(tempVal2>tempVal){... */\n      iszero\n      tag_106\n      jumpi\n        /* \"DEXLogic.sol\":2227:2234  tempVal */\n      dup4\n        /* \"DEXLogic.sol\":2215:2234  bestValue = tempVal */\n      swap5\n      pop\n        /* \"DEXLogic.sol\":2169:2298  if(tempVal2>tempVal){... */\n    tag_106:\n        /* \"DEXLogic.sol\":1897:2316  {... */\n      pop\n        /* \"DEXLogic.sol\":1652:2316  if(i==0){... */\n    tag_90:\n        /* \"DEXLogic.sol\":1629:1632  j++ */\n      dup1\n      tag_107\n      dup2\n      tag_108\n      jump\t// in\n    tag_107:\n      swap2\n      pop\n      pop\n        /* \"DEXLogic.sol\":1598:2383  for(uint256 j=0; j<dex.length; j++){... */\n      jump(tag_70)\n    tag_71:\n      pop\n        /* \"DEXLogic.sol\":1580:1583  i++ */\n      dup1\n      tag_109\n      dup2\n      tag_108\n      jump\t// in\n    tag_109:\n      swap2\n      pop\n      pop\n        /* \"DEXLogic.sol\":1547:2393  for(uint256 i; i<allPath.length; i++){... */\n      jump(tag_67)\n    tag_68:\n      pop\n        /* \"DEXLogic.sol\":2402:2413  uint256 one */\n      0x00\n        /* \"DEXLogic.sol\":2425:2428  dex */\n      0x05\n        /* \"DEXLogic.sol\":2429:2430  1 */\n      0x01\n        /* \"DEXLogic.sol\":2425:2431  dex[1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_111\n      jumpi\n      tag_111\n      tag_76\n      jump\t// in\n    tag_111:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":2452:2459  allPath */\n      0x07\n        /* \"DEXLogic.sol\":2452:2462  allPath[0] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":2425:2431  dex[1] */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"DEXLogic.sol\":2416:2446  IUNIFORK(dex[1]).getAmountsOut */\n      0xd06ca61f\n      swap3\n        /* \"DEXLogic.sol\":2447:2451  1e18 */\n      0x0de0b6b3a7640000\n      swap3\n        /* \"DEXLogic.sol\":2452:2459  allPath */\n      swap2\n        /* \"DEXLogic.sol\":2425:2431  dex[1] */\n      swap1\n        /* \"DEXLogic.sol\":2452:2462  allPath[0] */\n      tag_114\n      jumpi\n      tag_114\n      tag_76\n      jump\t// in\n    tag_114:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"DEXLogic.sol\":2416:2463  IUNIFORK(dex[1]).getAmountsOut(1e18,allPath[0]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_116:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_119\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_119:\n        /* \"DEXLogic.sol\":2464:2465  1 */\n      0x01\n        /* \"DEXLogic.sol\":2416:2466  IUNIFORK(dex[1]).getAmountsOut(1e18,allPath[0])[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_121\n      jumpi\n      tag_121\n      tag_76\n      jump\t// in\n    tag_121:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":2402:2466  uint256 one = IUNIFORK(dex[1]).getAmountsOut(1e18,allPath[0])[1] */\n      swap1\n      pop\n        /* \"DEXLogic.sol\":2476:2487  uint256 two */\n      0x00\n        /* \"DEXLogic.sol\":2499:2502  dex */\n      0x05\n        /* \"DEXLogic.sol\":2503:2504  1 */\n      0x01\n        /* \"DEXLogic.sol\":2499:2505  dex[1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_123\n      tag_76\n      jump\t// in\n    tag_123:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":2525:2532  allPath */\n      0x07\n        /* \"DEXLogic.sol\":2525:2535  allPath[1] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":2499:2505  dex[1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"DEXLogic.sol\":2490:2520  IUNIFORK(dex[1]).getAmountsOut */\n      0xd06ca61f\n      swap2\n        /* \"DEXLogic.sol\":2521:2524  one */\n      dup6\n      swap2\n        /* \"DEXLogic.sol\":2499:2505  dex[1] */\n      0x01\n      swap1\n        /* \"DEXLogic.sol\":2525:2535  allPath[1] */\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_126\n      tag_76\n      jump\t// in\n    tag_126:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"DEXLogic.sol\":2490:2536  IUNIFORK(dex[1]).getAmountsOut(one,allPath[1]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_131\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_131:\n        /* \"DEXLogic.sol\":2537:2538  1 */\n      0x01\n        /* \"DEXLogic.sol\":2490:2539  IUNIFORK(dex[1]).getAmountsOut(one,allPath[1])[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_133\n      tag_76\n      jump\t// in\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":2476:2539  uint256 two = IUNIFORK(dex[1]).getAmountsOut(one,allPath[1])[1] */\n      swap1\n      pop\n        /* \"DEXLogic.sol\":2549:2562  uint256 three */\n      0x00\n        /* \"DEXLogic.sol\":2574:2577  dex */\n      0x05\n        /* \"DEXLogic.sol\":2578:2579  1 */\n      0x01\n        /* \"DEXLogic.sol\":2574:2580  dex[1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_135\n      jumpi\n      tag_135\n      tag_76\n      jump\t// in\n    tag_135:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":2600:2607  allPath */\n      0x07\n        /* \"DEXLogic.sol\":2600:2610  allPath[2] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":2574:2580  dex[1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"DEXLogic.sol\":2565:2595  IUNIFORK(dex[1]).getAmountsOut */\n      0xd06ca61f\n      swap2\n        /* \"DEXLogic.sol\":2596:2599  two */\n      dup6\n      swap2\n        /* \"DEXLogic.sol\":2608:2609  2 */\n      0x02\n      swap1\n        /* \"DEXLogic.sol\":2600:2610  allPath[2] */\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_138\n      tag_76\n      jump\t// in\n    tag_138:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"DEXLogic.sol\":2565:2611  IUNIFORK(dex[1]).getAmountsOut(two,allPath[2]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_140:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_143\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_143:\n        /* \"DEXLogic.sol\":2612:2613  1 */\n      0x01\n        /* \"DEXLogic.sol\":2565:2614  IUNIFORK(dex[1]).getAmountsOut(two,allPath[2])[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_76\n      jump\t// in\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":2549:2614  uint256 three = IUNIFORK(dex[1]).getAmountsOut(two,allPath[2])[1] */\n      swap1\n      pop\n        /* \"DEXLogic.sol\":2624:2636  uint256 four */\n      0x00\n        /* \"DEXLogic.sol\":2648:2651  dex */\n      0x05\n        /* \"DEXLogic.sol\":2652:2653  1 */\n      0x01\n        /* \"DEXLogic.sol\":2648:2654  dex[1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_76\n      jump\t// in\n    tag_147:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":2676:2683  allPath */\n      0x07\n        /* \"DEXLogic.sol\":2676:2686  allPath[3] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":2648:2654  dex[1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"DEXLogic.sol\":2639:2669  IUNIFORK(dex[1]).getAmountsOut */\n      0xd06ca61f\n      swap2\n        /* \"DEXLogic.sol\":2670:2675  three */\n      dup6\n      swap2\n        /* \"DEXLogic.sol\":2684:2685  3 */\n      0x03\n      swap1\n        /* \"DEXLogic.sol\":2676:2686  allPath[3] */\n      dup2\n      lt\n      tag_150\n      jumpi\n      tag_150\n      tag_76\n      jump\t// in\n    tag_150:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"DEXLogic.sol\":2639:2687  IUNIFORK(dex[1]).getAmountsOut(three,allPath[3]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_152:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_155\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_155:\n        /* \"DEXLogic.sol\":2688:2689  1 */\n      0x01\n        /* \"DEXLogic.sol\":2639:2690  IUNIFORK(dex[1]).getAmountsOut(three,allPath[3])[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_157\n      tag_76\n      jump\t// in\n    tag_157:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":2624:2690  uint256 four = IUNIFORK(dex[1]).getAmountsOut(three,allPath[3])[1] */\n      swap1\n      pop\n        /* \"DEXLogic.sol\":2781:2790  bestValue */\n      dup6\n        /* \"DEXLogic.sol\":2791:2795  four */\n      dup2\n        /* \"DEXLogic.sol\":2805:2808  dex */\n      0x05\n        /* \"DEXLogic.sol\":2809:2810  1 */\n      0x01\n        /* \"DEXLogic.sol\":2805:2811  dex[1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_159\n      tag_76\n      jump\t// in\n    tag_159:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":2796:2837  IUNIFORK(dex[1]).getAmountsOut(1e18,path) */\n      mload(0x40)\n      shl(0xe0, 0xd06ca61f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":2805:2811  dex[1] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEXLogic.sol\":2796:2826  IUNIFORK(dex[1]).getAmountsOut */\n      0xd06ca61f\n      swap1\n        /* \"DEXLogic.sol\":2796:2837  IUNIFORK(dex[1]).getAmountsOut(1e18,path) */\n      tag_161\n      swap1\n        /* \"DEXLogic.sol\":2827:2831  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"DEXLogic.sol\":2832:2836  path */\n      0x06\n      swap1\n        /* \"DEXLogic.sol\":2796:2837  IUNIFORK(dex[1]).getAmountsOut(1e18,path) */\n      0x04\n      add\n      tag_82\n      jump\t// in\n    tag_161:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_164\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_164:\n        /* \"DEXLogic.sol\":2838:2839  1 */\n      0x01\n        /* \"DEXLogic.sol\":2796:2840  IUNIFORK(dex[1]).getAmountsOut(1e18,path)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_166\n      tag_76\n      jump\t// in\n    tag_166:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":2774:2841  return(bestValue,four,IUNIFORK(dex[1]).getAmountsOut(1e18,path)[1]) */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DEXLogic.sol\":1399:2848  function getBestPriceWithPaths()public view returns(uint256,uint256,uint256){... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"DEXLogic.sol\":1025:1393  function getPrice()public view returns(uint256){... */\n    tag_41:\n        /* \"DEXLogic.sol\":1064:1071  uint256 */\n      0x00\n        /* \"DEXLogic.sol\":1082:1099  uint256 bestValue */\n      dup1\n        /* \"DEXLogic.sol\":1113:1122  uint256 i */\n      0x00\n        /* \"DEXLogic.sol\":1109:1355  for(uint256 i=0; i<path.length; i++){... */\n    tag_168:\n        /* \"DEXLogic.sol\":1128:1132  path */\n      0x06\n        /* \"DEXLogic.sol\":1128:1139  path.length */\n      sload\n        /* \"DEXLogic.sol\":1126:1139  i<path.length */\n      dup2\n      lt\n        /* \"DEXLogic.sol\":1109:1355  for(uint256 i=0; i<path.length; i++){... */\n      iszero\n      tag_169\n      jumpi\n        /* \"DEXLogic.sol\":1207:1216  bestValue */\n      dup2\n        /* \"DEXLogic.sol\":1171:1174  dex */\n      0x05\n        /* \"DEXLogic.sol\":1175:1176  i */\n      dup3\n        /* \"DEXLogic.sol\":1171:1177  dex[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_172\n      tag_76\n      jump\t// in\n    tag_172:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":1162:1203  IUNIFORK(dex[i]).getAmountsOut(1e18,path) */\n      mload(0x40)\n      shl(0xe0, 0xd06ca61f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":1171:1177  dex[i] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEXLogic.sol\":1162:1192  IUNIFORK(dex[i]).getAmountsOut */\n      0xd06ca61f\n      swap1\n        /* \"DEXLogic.sol\":1162:1203  IUNIFORK(dex[i]).getAmountsOut(1e18,path) */\n      tag_174\n      swap1\n        /* \"DEXLogic.sol\":1193:1197  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"DEXLogic.sol\":1198:1202  path */\n      0x06\n      swap1\n        /* \"DEXLogic.sol\":1162:1203  IUNIFORK(dex[i]).getAmountsOut(1e18,path) */\n      0x04\n      add\n      tag_82\n      jump\t// in\n    tag_174:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_177\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_177:\n        /* \"DEXLogic.sol\":1204:1205  1 */\n      0x01\n        /* \"DEXLogic.sol\":1162:1206  IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_76\n      jump\t// in\n    tag_179:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":1162:1216  IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1]>bestValue */\n      gt\n        /* \"DEXLogic.sol\":1159:1345  if(IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1]>bestValue){... */\n      iszero\n      tag_180\n      jumpi\n        /* \"DEXLogic.sol\":1256:1259  dex */\n      0x05\n        /* \"DEXLogic.sol\":1260:1261  i */\n      dup2\n        /* \"DEXLogic.sol\":1256:1262  dex[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_76\n      jump\t// in\n    tag_182:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"DEXLogic.sol\":1247:1288  IUNIFORK(dex[i]).getAmountsOut(1e18,path) */\n      mload(0x40)\n      shl(0xe0, 0xd06ca61f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEXLogic.sol\":1256:1262  dex[i] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEXLogic.sol\":1247:1277  IUNIFORK(dex[i]).getAmountsOut */\n      0xd06ca61f\n      swap1\n        /* \"DEXLogic.sol\":1247:1288  IUNIFORK(dex[i]).getAmountsOut(1e18,path) */\n      tag_184\n      swap1\n        /* \"DEXLogic.sol\":1278:1282  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"DEXLogic.sol\":1283:1287  path */\n      0x06\n      swap1\n        /* \"DEXLogic.sol\":1247:1288  IUNIFORK(dex[i]).getAmountsOut(1e18,path) */\n      0x04\n      add\n      tag_82\n      jump\t// in\n    tag_184:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_187\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_86\n      jump\t// in\n    tag_187:\n        /* \"DEXLogic.sol\":1289:1290  1 */\n      0x01\n        /* \"DEXLogic.sol\":1247:1291  IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_189\n      jumpi\n      tag_189\n      tag_76\n      jump\t// in\n    tag_189:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEXLogic.sol\":1235:1291  bestValue = IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1] */\n      swap2\n      pop\n        /* \"DEXLogic.sol\":1159:1345  if(IUNIFORK(dex[i]).getAmountsOut(1e18,path)[1]>bestValue){... */\n    tag_180:\n        /* \"DEXLogic.sol\":1141:1144  i++ */\n      dup1\n      tag_191\n      dup2\n      tag_108\n      jump\t// in\n    tag_191:\n      swap2\n      pop\n      pop\n        /* \"DEXLogic.sol\":1109:1355  for(uint256 i=0; i<path.length; i++){... */\n      jump(tag_168)\n    tag_169:\n      pop\n        /* \"DEXLogic.sol\":1376:1385  bestValue */\n      swap2\n        /* \"DEXLogic.sol\":1025:1393  function getPrice()public view returns(uint256){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"DEXLogic.sol\":787:821  address[] public path = [WETH,OHM] */\n    tag_52:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"#utility.yul\":222:402   */\n    tag_22:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_199:\n      pop\n        /* \"#utility.yul\":373:396   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":222:402   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":407:655   */\n    tag_30:\n        /* \"#utility.yul\":475:481   */\n      0x00\n        /* \"#utility.yul\":483:489   */\n      dup1\n        /* \"#utility.yul\":536:538   */\n      0x40\n        /* \"#utility.yul\":524:533   */\n      dup4\n        /* \"#utility.yul\":515:522   */\n      dup6\n        /* \"#utility.yul\":511:534   */\n      sub\n        /* \"#utility.yul\":507:539   */\n      slt\n        /* \"#utility.yul\":504:556   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":552:553   */\n      0x00\n        /* \"#utility.yul\":549:550   */\n      dup1\n        /* \"#utility.yul\":542:554   */\n      revert\n        /* \"#utility.yul\":504:556   */\n    tag_201:\n      pop\n      pop\n        /* \"#utility.yul\":575:598   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":645:647   */\n      0x20\n        /* \"#utility.yul\":630:648   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":617:649   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":407:655   */\n      jump\t// out\n        /* \"#utility.yul\":1166:1293   */\n    tag_76:\n        /* \"#utility.yul\":1227:1237   */\n      0x4e487b71\n        /* \"#utility.yul\":1222:1225   */\n      0xe0\n        /* \"#utility.yul\":1218:1238   */\n      shl\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1239   */\n      mstore\n        /* \"#utility.yul\":1258:1262   */\n      0x32\n        /* \"#utility.yul\":1255:1256   */\n      0x04\n        /* \"#utility.yul\":1248:1263   */\n      mstore\n        /* \"#utility.yul\":1282:1286   */\n      0x24\n        /* \"#utility.yul\":1279:1280   */\n      0x00\n        /* \"#utility.yul\":1272:1287   */\n      revert\n        /* \"#utility.yul\":1298:1793   */\n    tag_194:\n        /* \"#utility.yul\":1359:1362   */\n      0x00\n        /* \"#utility.yul\":1397:1402   */\n      dup2\n        /* \"#utility.yul\":1391:1403   */\n      sload\n        /* \"#utility.yul\":1424:1430   */\n      dup1\n        /* \"#utility.yul\":1419:1422   */\n      dup5\n        /* \"#utility.yul\":1412:1431   */\n      mstore\n        /* \"#utility.yul\":1450:1454   */\n      0x20\n        /* \"#utility.yul\":1479:1481   */\n      dup1\n        /* \"#utility.yul\":1474:1477   */\n      dup6\n        /* \"#utility.yul\":1470:1482   */\n      add\n        /* \"#utility.yul\":1463:1482   */\n      swap5\n      pop\n        /* \"#utility.yul\":1501:1506   */\n      dup4\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1491:1507   */\n      mstore\n        /* \"#utility.yul\":1543:1545   */\n      dup1\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1530:1546   */\n      keccak256\n        /* \"#utility.yul\":1564:1565   */\n      0x00\n        /* \"#utility.yul\":1574:1768   */\n    tag_206:\n        /* \"#utility.yul\":1588:1594   */\n      dup4\n        /* \"#utility.yul\":1585:1586   */\n      dup2\n        /* \"#utility.yul\":1582:1595   */\n      lt\n        /* \"#utility.yul\":1574:1768   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1653:1666   */\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1649:1688   */\n      and\n        /* \"#utility.yul\":1637:1689   */\n      dup8\n      mstore\n        /* \"#utility.yul\":1709:1721   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":1685:1686   */\n      0x01\n        /* \"#utility.yul\":1744:1758   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"#utility.yul\":1603:1612   */\n      add\n        /* \"#utility.yul\":1574:1768   */\n      jump(tag_206)\n    tag_208:\n      pop\n        /* \"#utility.yul\":1784:1787   */\n      swap5\n      swap6\n        /* \"#utility.yul\":1298:1793   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2161   */\n    tag_82:\n        /* \"#utility.yul\":2028:2034   */\n      dup3\n        /* \"#utility.yul\":2017:2026   */\n      dup2\n        /* \"#utility.yul\":2010:2035   */\n      mstore\n        /* \"#utility.yul\":2071:2073   */\n      0x40\n        /* \"#utility.yul\":2066:2068   */\n      0x20\n        /* \"#utility.yul\":2055:2064   */\n      dup3\n        /* \"#utility.yul\":2051:2069   */\n      add\n        /* \"#utility.yul\":2044:2074   */\n      mstore\n        /* \"#utility.yul\":1991:1995   */\n      0x00\n        /* \"#utility.yul\":2091:2155   */\n      tag_210\n        /* \"#utility.yul\":2151:2153   */\n      0x40\n        /* \"#utility.yul\":2140:2149   */\n      dup4\n        /* \"#utility.yul\":2136:2154   */\n      add\n        /* \"#utility.yul\":2128:2134   */\n      dup5\n        /* \"#utility.yul\":2091:2155   */\n      tag_194\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2083:2155   */\n      swap5\n        /* \"#utility.yul\":1798:2161   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2293   */\n    tag_195:\n        /* \"#utility.yul\":2227:2237   */\n      0x4e487b71\n        /* \"#utility.yul\":2222:2225   */\n      0xe0\n        /* \"#utility.yul\":2218:2238   */\n      shl\n        /* \"#utility.yul\":2215:2216   */\n      0x00\n        /* \"#utility.yul\":2208:2239   */\n      mstore\n        /* \"#utility.yul\":2258:2262   */\n      0x41\n        /* \"#utility.yul\":2255:2256   */\n      0x04\n        /* \"#utility.yul\":2248:2263   */\n      mstore\n        /* \"#utility.yul\":2282:2286   */\n      0x24\n        /* \"#utility.yul\":2279:2280   */\n      0x00\n        /* \"#utility.yul\":2272:2287   */\n      revert\n        /* \"#utility.yul\":2298:3403   */\n    tag_86:\n        /* \"#utility.yul\":2393:2399   */\n      0x00\n        /* \"#utility.yul\":2424:2426   */\n      0x20\n        /* \"#utility.yul\":2467:2469   */\n      dup1\n        /* \"#utility.yul\":2455:2464   */\n      dup4\n        /* \"#utility.yul\":2446:2453   */\n      dup6\n        /* \"#utility.yul\":2442:2465   */\n      sub\n        /* \"#utility.yul\":2438:2470   */\n      slt\n        /* \"#utility.yul\":2435:2487   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":2483:2484   */\n      0x00\n        /* \"#utility.yul\":2480:2481   */\n      dup1\n        /* \"#utility.yul\":2473:2485   */\n      revert\n        /* \"#utility.yul\":2435:2487   */\n    tag_213:\n        /* \"#utility.yul\":2516:2525   */\n      dup3\n        /* \"#utility.yul\":2510:2526   */\n      mload\n        /* \"#utility.yul\":2545:2563   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2586:2588   */\n      dup1\n        /* \"#utility.yul\":2578:2584   */\n      dup3\n        /* \"#utility.yul\":2575:2589   */\n      gt\n        /* \"#utility.yul\":2572:2606   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2599:2600   */\n      dup1\n        /* \"#utility.yul\":2592:2604   */\n      revert\n        /* \"#utility.yul\":2572:2606   */\n    tag_214:\n        /* \"#utility.yul\":2640:2646   */\n      dup2\n        /* \"#utility.yul\":2629:2638   */\n      dup6\n        /* \"#utility.yul\":2625:2647   */\n      add\n        /* \"#utility.yul\":2615:2647   */\n      swap2\n      pop\n        /* \"#utility.yul\":2685:2692   */\n      dup6\n        /* \"#utility.yul\":2678:2682   */\n      0x1f\n        /* \"#utility.yul\":2674:2676   */\n      dup4\n        /* \"#utility.yul\":2670:2683   */\n      add\n        /* \"#utility.yul\":2666:2693   */\n      slt\n        /* \"#utility.yul\":2656:2711   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2707:2708   */\n      0x00\n        /* \"#utility.yul\":2704:2705   */\n      dup1\n        /* \"#utility.yul\":2697:2709   */\n      revert\n        /* \"#utility.yul\":2656:2711   */\n    tag_215:\n        /* \"#utility.yul\":2736:2738   */\n      dup2\n        /* \"#utility.yul\":2730:2739   */\n      mload\n        /* \"#utility.yul\":2758:2760   */\n      dup2\n        /* \"#utility.yul\":2754:2756   */\n      dup2\n        /* \"#utility.yul\":2751:2761   */\n      gt\n        /* \"#utility.yul\":2748:2784   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2764:2782   */\n      tag_217\n      tag_195\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2810:2812   */\n      dup1\n        /* \"#utility.yul\":2807:2808   */\n      0x05\n        /* \"#utility.yul\":2803:2813   */\n      shl\n        /* \"#utility.yul\":2842:2844   */\n      0x40\n        /* \"#utility.yul\":2836:2845   */\n      mload\n        /* \"#utility.yul\":2905:2907   */\n      0x1f\n        /* \"#utility.yul\":2901:2908   */\n      not\n        /* \"#utility.yul\":2896:2898   */\n      0x3f\n        /* \"#utility.yul\":2892:2894   */\n      dup4\n        /* \"#utility.yul\":2888:2899   */\n      add\n        /* \"#utility.yul\":2884:2909   */\n      and\n        /* \"#utility.yul\":2876:2882   */\n      dup2\n        /* \"#utility.yul\":2872:2910   */\n      add\n        /* \"#utility.yul\":2960:2966   */\n      dup2\n        /* \"#utility.yul\":2948:2958   */\n      dup2\n        /* \"#utility.yul\":2945:2967   */\n      lt\n        /* \"#utility.yul\":2940:2942   */\n      dup6\n        /* \"#utility.yul\":2928:2938   */\n      dup3\n        /* \"#utility.yul\":2925:2943   */\n      gt\n        /* \"#utility.yul\":2922:2968   */\n      or\n        /* \"#utility.yul\":2919:2991   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2971:2989   */\n      tag_219\n      tag_195\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3007:3009   */\n      0x40\n        /* \"#utility.yul\":3000:3022   */\n      mstore\n        /* \"#utility.yul\":3057:3075   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":3091:3106   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":3133:3144   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":3129:3149   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":3161:3180   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":3158:3197   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":3193:3194   */\n      0x00\n        /* \"#utility.yul\":3190:3191   */\n      dup1\n        /* \"#utility.yul\":3183:3195   */\n      revert\n        /* \"#utility.yul\":3158:3197   */\n    tag_220:\n        /* \"#utility.yul\":3217:3228   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":3237:3372   */\n    tag_221:\n        /* \"#utility.yul\":3253:3259   */\n      dup3\n        /* \"#utility.yul\":3248:3251   */\n      dup6\n        /* \"#utility.yul\":3245:3260   */\n      lt\n        /* \"#utility.yul\":3237:3372   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3319:3329   */\n      dup5\n      mload\n        /* \"#utility.yul\":3307:3330   */\n      dup5\n      mstore\n        /* \"#utility.yul\":3270:3282   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":3350:3362   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":3237:3372   */\n      jump(tag_221)\n    tag_223:\n        /* \"#utility.yul\":3391:3397   */\n      swap9\n        /* \"#utility.yul\":2298:3403   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3750:3982   */\n    tag_108:\n        /* \"#utility.yul\":3789:3792   */\n      0x00\n        /* \"#utility.yul\":3810:3827   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3807:3947   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3869:3879   */\n      0x4e487b71\n        /* \"#utility.yul\":3864:3867   */\n      0xe0\n        /* \"#utility.yul\":3860:3880   */\n      shl\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3881   */\n      mstore\n        /* \"#utility.yul\":3904:3908   */\n      0x11\n        /* \"#utility.yul\":3901:3902   */\n      0x04\n        /* \"#utility.yul\":3894:3909   */\n      mstore\n        /* \"#utility.yul\":3932:3936   */\n      0x24\n        /* \"#utility.yul\":3929:3930   */\n      0x00\n        /* \"#utility.yul\":3922:3937   */\n      revert\n        /* \"#utility.yul\":3807:3947   */\n    tag_227:\n      pop\n        /* \"#utility.yul\":3974:3975   */\n      0x01\n        /* \"#utility.yul\":3963:3976   */\n      add\n      swap1\n        /* \"#utility.yul\":3750:3982   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208883fcaf07b16621278169abe5605d0e9cb76778ae1dbd0a048106bddcd26e0164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_789": {
									"entryPoint": null,
									"id": 789,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "600080546001600160a01b031990811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc21790915560018054821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4817905560028054821673dac17f958d2ee523a2206206994597c13d831ec7178155600380548316736b175474e89094c44da98b954eedeac495271d0f179055600480549092167364aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d51790915560c0604052737a250d5630b4cf539739df2c5dacb4c659f2488d608090815273d9e1ce17f2641f24ae83637ab66a2cca9c378b9f60a052620000e8916005919062000283565b50604080518082019091526000546001600160a01b0390811682526004541660208201526200011c90600690600262000283565b503480156200012a57600080fd5b5060408051808201909152600080546001600160a01b0390811683526001805490911660208401526007805491820181559091526200017f9160008051602062000f3d83398151915290910190600262000283565b5060408051808201909152600180546001600160a01b039081168352600280549091166020840152600780549283018155600052620001d39260008051602062000f3d833981519152909201919062000283565b5060408051808201909152600280546001600160a01b03908116835260035416602083015260078054600181018255600091909152620002279260008051602062000f3d8339815191529091019162000283565b50604080518082019091526003546001600160a01b039081168252600454166020820152600780546001810182556000919091526200027c9160008051602062000f3d83398151915290910190600262000283565b5062000304565b828054828255906000526020600020908101928215620002db579160200282015b82811115620002db57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002a4565b50620002e9929150620002ed565b5090565b5b80821115620002e95760008155600101620002ee565b610c2980620003146000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806398d5fdca1161007157806398d5fdca14610168578063a6c41fec1461017e578063ad5c464814610191578063af6d1fe4146101a4578063c54e44eb146101b7578063e0bab4c4146101ca57600080fd5b80631694505e146100b957806324d16c1a146100f157806338c6cdd51461010457806346fab9e91461011f57806370b5180d1461013257806389a3027114610155575b600080fd5b6100d4737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d46100ff366004610a3d565b6101dd565b6100d473d9e1ce17f2641f24ae83637ab66a2cca9c378b9f81565b6100d461012d366004610a56565b610207565b61013a61024b565b604080519384526020840192909252908201526060016100e8565b6001546100d4906001600160a01b031681565b61017061088f565b6040519081526020016100e8565b6004546100d4906001600160a01b031681565b6000546100d4906001600160a01b031681565b6100d46101b2366004610a3d565b610a2d565b6002546100d4906001600160a01b031681565b6003546100d4906001600160a01b031681565b600581815481106101ed57600080fd5b6000918252602090912001546001600160a01b0316905081565b6007828154811061021757600080fd5b90600052602060002001818154811061022f57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6000806000806000805b6007548110156104745760005b600554811015610461578160000361035f5760006005828154811061028957610289610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f91670de0b6b3a764000091879081106102c5576102c5610a78565b906000526020600020016040518363ffffffff1660e01b81526004016102ec929190610ad7565b600060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103319190810190610b0e565b60018151811061034357610343610a78565b6020026020010151905083811115610359578093505b5061044f565b60006005828154811061037457610374610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918791879081106103a8576103a8610a78565b906000526020600020016040518363ffffffff1660e01b81526004016103cf929190610ad7565b600060405180830381865afa1580156103ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104149190810190610b0e565b60018151811061042657610426610a78565b6020026020010151905083811115610441579293508261044d565b8381111561044d578394505b505b8061045981610bcc565b915050610262565b508061046c81610bcc565b915050610255565b506000600560018154811061048b5761048b610a78565b6000918252602082200154600780546001600160a01b039092169263d06ca61f92670de0b6b3a76400009291906104c4576104c4610a78565b906000526020600020016040518363ffffffff1660e01b81526004016104eb929190610ad7565b600060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105309190810190610b0e565b60018151811061054257610542610a78565b602002602001015190506000600560018154811061056257610562610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918591600190811061059757610597610a78565b906000526020600020016040518363ffffffff1660e01b81526004016105be929190610ad7565b600060405180830381865afa1580156105db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106039190810190610b0e565b60018151811061061557610615610a78565b602002602001015190506000600560018154811061063557610635610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918591600290811061066a5761066a610a78565b906000526020600020016040518363ffffffff1660e01b8152600401610691929190610ad7565b600060405180830381865afa1580156106ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d69190810190610b0e565b6001815181106106e8576106e8610a78565b602002602001015190506000600560018154811061070857610708610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918591600390811061073d5761073d610a78565b906000526020600020016040518363ffffffff1660e01b8152600401610764929190610ad7565b600060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a99190810190610b0e565b6001815181106107bb576107bb610a78565b60200260200101519050858160056001815481106107db576107db610a78565b60009182526020909120015460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f9061081f90670de0b6b3a764000090600690600401610ad7565b600060405180830381865afa15801561083c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108649190810190610b0e565b60018151811061087657610876610a78565b6020026020010151985098509850505050505050909192565b60008060005b600654811015610a275781600582815481106108b3576108b3610a78565b60009182526020909120015460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f906108f790670de0b6b3a764000090600690600401610ad7565b600060405180830381865afa158015610914573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261093c9190810190610b0e565b60018151811061094e5761094e610a78565b60200260200101511115610a15576005818154811061096f5761096f610a78565b60009182526020909120015460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f906109b390670de0b6b3a764000090600690600401610ad7565b600060405180830381865afa1580156109d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f89190810190610b0e565b600181518110610a0a57610a0a610a78565b602002602001015191505b80610a1f81610bcc565b915050610895565b50919050565b600681815481106101ed57600080fd5b600060208284031215610a4f57600080fd5b5035919050565b60008060408385031215610a6957600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b6000815480845260208085019450836000528060002060005b83811015610acc5781546001600160a01b031687529582019560019182019101610aa7565b509495945050505050565b828152604060208201526000610af06040830184610a8e565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610b2157600080fd5b825167ffffffffffffffff80821115610b3957600080fd5b818501915085601f830112610b4d57600080fd5b815181811115610b5f57610b5f610af8565b8060051b604051601f19603f83011681018181108582111715610b8457610b84610af8565b604052918252848201925083810185019188831115610ba257600080fd5b938501935b82851015610bc057845184529385019392850192610ba7565b98975050505050505050565b600060018201610bec57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212208883fcaf07b16621278169abe5605d0e9cb76778ae1dbd0a048106bddcd26e0164736f6c63430008120033a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688",
							"opcodes": "PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND PUSH20 0xDAC17F958D2EE523A2206206994597C13D831EC7 OR DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP4 AND PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP3 AND PUSH20 0x64AA3364F17A4D01C6F1751FD97C2BD3D7E7F1D5 OR SWAP1 SWAP2 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH1 0xA0 MSTORE PUSH3 0xE8 SWAP2 PUSH1 0x5 SWAP2 SWAP1 PUSH3 0x283 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x4 SLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x11C SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x2 PUSH3 0x283 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH3 0x17F SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xF3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SWAP1 PUSH1 0x2 PUSH3 0x283 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x7 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH3 0x1D3 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xF3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP3 ADD SWAP2 SWAP1 PUSH3 0x283 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x3 SLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH3 0x227 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xF3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SWAP2 PUSH3 0x283 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x4 SLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH3 0x27C SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xF3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD SWAP1 PUSH1 0x2 PUSH3 0x283 JUMP JUMPDEST POP PUSH3 0x304 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2DB JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2DB JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2A4 JUMP JUMPDEST POP PUSH3 0x2E9 SWAP3 SWAP2 POP PUSH3 0x2ED JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2E9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2EE JUMP JUMPDEST PUSH2 0xC29 DUP1 PUSH3 0x314 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5FDCA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xA6C41FEC EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xAF6D1FE4 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1694505E EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x24D16C1A EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x38C6CDD5 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x46FAB9E9 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70B5180D EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x1DD JUMP JUMPDEST PUSH2 0xD4 PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F DUP2 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x461 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x35F JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x289 JUMPI PUSH2 0x289 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x2C5 JUMPI PUSH2 0x2C5 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x331 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x343 JUMPI PUSH2 0x343 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x359 JUMPI DUP1 SWAP4 POP JUMPDEST POP PUSH2 0x44F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x374 JUMPI PUSH2 0x374 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP8 SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x3A8 JUMPI PUSH2 0x3A8 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x414 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x426 JUMPI PUSH2 0x426 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x441 JUMPI SWAP3 SWAP4 POP DUP3 PUSH2 0x44D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x44D JUMPI DUP4 SWAP5 POP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x459 DUP2 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x262 JUMP JUMPDEST POP DUP1 PUSH2 0x46C DUP2 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x255 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48B PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xD06CA61F SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP3 SWAP2 SWAP1 PUSH2 0x4C4 JUMPI PUSH2 0x4C4 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x530 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x542 JUMPI PUSH2 0x542 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x597 JUMPI PUSH2 0x597 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BE SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x603 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH2 0x615 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP6 SWAP2 PUSH1 0x2 SWAP1 DUP2 LT PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6D6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x6E8 JUMPI PUSH2 0x6E8 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x708 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP6 SWAP2 PUSH1 0x3 SWAP1 DUP2 LT PUSH2 0x73D JUMPI PUSH2 0x73D PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x764 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7A9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH2 0x7BB PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP6 DUP2 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x7DB JUMPI PUSH2 0x7DB PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x81F SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x864 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x876 JUMPI PUSH2 0x876 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8B3 JUMPI PUSH2 0x8B3 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x8F7 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x914 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x93C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x94E JUMPI PUSH2 0x94E PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x96F JUMPI PUSH2 0x96F PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x9B3 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x9F8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0xA1F DUP2 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x895 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xACC JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xAA7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xAF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0xAF8 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB84 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xBC0 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xBA7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xBEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP4 0xFC 0xAF SMOD 0xB1 PUSH7 0x21278169ABE560 0x5D 0xE SWAP13 0xB7 PUSH8 0x78AE1DBD0A048106 0xBD 0xDC 0xD2 PUSH15 0x164736F6C63430008120033A66CC9 0x28 0xB5 0xED 0xB8 0x2A 0xF9 0xBD 0x49 SWAP3 0x29 SLOAD ISZERO GAS 0xB7 0xB0 SWAP5 0x26 SWAP5 0xBE LOG4 0xCE PREVRANDAO PUSH7 0x1D9A8736C68800 ",
							"sourceMap": "373:64:4:-:0;;;-1:-1:-1;;;;;;373:64:4;;;395:42;373:64;;;;;443;;;;465:42;443:64;;;513;;;;;535:42;513:64;;;583:63;;;;;604:42;583:63;;;652;;;;;;673:42;652:63;;;;722:58;164:2686;722:58;232:42;164:2686;722:58;;;324:42;722:58;;;;;;164:2686;722:58;:::i;:::-;-1:-1:-1;787:34:4;;;;;;;;;-1:-1:-1;812:4:4;-1:-1:-1;;;;;812:4:4;;;787:34;;817:3;;;787:34;;;;;;;;;;:::i;:::-;;861:157;;;;;;;;;-1:-1:-1;884:25:4;;;;;;;;;-1:-1:-1;898:4:4;;-1:-1:-1;;;;;898:4:4;;;884:25;;898:4;903;;;;;884:25;;;;:7;:25;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;884:25:4;;;;;;:::i;:::-;-1:-1:-1;919:25:4;;;;;;;;;933:4;;;-1:-1:-1;;;;;933:4:4;;;919:25;;938:4;;;;;;919:25;;;;:7;:25;;;;;;;-1:-1:-1;919:25:4;;;-1:-1:-1;;;;;;;;;;;919:25:4;;;;;;:::i;:::-;-1:-1:-1;954:24:4;;;;;;;;;968:4;;;-1:-1:-1;;;;;968:4:4;;;954:24;;973:3;;;954:24;;;;:7;:24;;968:4;954:24;;;;-1:-1:-1;954:24:4;;;;;;-1:-1:-1;;;;;;;;;;;954:24:4;;;;;:::i;:::-;-1:-1:-1;988:23:4;;;;;;;;;1002:3;;-1:-1:-1;;;;;1002:3:4;;;988:23;;1006:3;;;988:23;;;;:7;:23;;1002:3;988:23;;;;-1:-1:-1;988:23:4;;;;;;-1:-1:-1;;;;;;;;;;;988:23:4;;;;;;:::i;:::-;;164:2686;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;164:2686:4;-1:-1:-1;;;;;164:2686:4;;;;;;;;;;;-1:-1:-1;164:2686:4;;;;;;;-1:-1:-1;164:2686:4;;;-1:-1:-1;164:2686:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAI_734": {
									"entryPoint": null,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OHM_737": {
									"entryPoint": null,
									"id": 737,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_728": {
									"entryPoint": null,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDT_731": {
									"entryPoint": null,
									"id": 731,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_725": {
									"entryPoint": null,
									"id": 725,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allPath_753": {
									"entryPoint": 519,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dex_743": {
									"entryPoint": 477,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBestPriceWithPaths_1041": {
									"entryPoint": 587,
									"id": 1041,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@getPrice_848": {
									"entryPoint": 2191,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@path_749": {
									"entryPoint": 2605,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sushiswapV2Router_722": {
									"entryPoint": null,
									"id": 722,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV2Router_719": {
									"entryPoint": null,
									"id": 719,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_array_address_dyn_storage": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1000000000000000000_by_1_t_array$_t_address_$dyn_storage__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_storage__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3984:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:6"
															},
															"nodeType": "YulIf",
															"src": "302:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "363:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "386:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "373:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:6",
														"type": ""
													}
												],
												"src": "222:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "494:161:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "540:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "552:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "542:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "542:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "515:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "511:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "511:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "536:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "507:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:32:6"
															},
															"nodeType": "YulIf",
															"src": "504:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "588:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "575:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "565:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "607:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "634:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "617:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "452:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "463:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "483:6:6",
														"type": ""
													}
												],
												"src": "407:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "817:162:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "827:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "880:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "862:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "907:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "918:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "903:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "903:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "923:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "950:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "961:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "966:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "770:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "781:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "789:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "797:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "808:4:6",
														"type": ""
													}
												],
												"src": "660:319:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1085:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1095:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1107:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1103:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1095:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1137:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1130:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1054:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1065:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1076:4:6",
														"type": ""
													}
												],
												"src": "984:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1227:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1255:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1258:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1248:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1166:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:426:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1397:5:6"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1391:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:12:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1381:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1419:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1424:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1412:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1412:19:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1440:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1450:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1444:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1463:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1474:3:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1479:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1470:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1463:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1501:5:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:16:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:16:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1516:30:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1543:2:6"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1530:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:16:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1520:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1555:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1564:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1559:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1623:145:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1659:6:6"
																								}
																							],
																							"functionName": {
																								"name": "sload",
																								"nodeType": "YulIdentifier",
																								"src": "1653:5:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1653:13:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1676:3:6",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1681:1:6",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1672:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1672:11:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1685:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1668:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1668:19:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1649:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1649:39:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1637:52:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:52:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1702:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1713:3:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1718:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1709:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1709:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1702:3:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1734:24:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1748:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1756:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1744:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1744:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1734:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1585:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1588:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1582:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1596:18:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1598:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1607:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1610:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1603:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1603:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1598:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1578:3:6",
																"statements": []
															},
															"src": "1574:194:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1777:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1784:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1344:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1351:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1359:3:6",
														"type": ""
													}
												],
												"src": "1298:495:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2000:161:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2017:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2010:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2055:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2066:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2051:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2051:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2044:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2044:30:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2083:72:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2128:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2151:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2091:36:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:64:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2083:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1000000000000000000_by_1_t_array$_t_address_$dyn_storage__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1961:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1972:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1980:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1991:4:6",
														"type": ""
													}
												],
												"src": "1798:363:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2198:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2215:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2222:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2208:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2208:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2255:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2272:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2166:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2404:999:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2414:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2424:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2418:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2471:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2480:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2473:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2473:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2473:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2446:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2455:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2442:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2442:23:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2467:2:6"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:32:6"
															},
															"nodeType": "YulIf",
															"src": "2435:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2496:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2516:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2510:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2510:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2500:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2535:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2545:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2539:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2590:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2592:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2592:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2592:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2578:6:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2586:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2575:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:14:6"
															},
															"nodeType": "YulIf",
															"src": "2572:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2615:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2640:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:22:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2619:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2695:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2697:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2674:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2678:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2670:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2670:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2685:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2666:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2666:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2659:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:35:6"
															},
															"nodeType": "YulIf",
															"src": "2656:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2720:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2736:2:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2730:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:9:6"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2724:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2762:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2764:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2764:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2764:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2754:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2758:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2751:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:10:6"
															},
															"nodeType": "YulIf",
															"src": "2748:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2793:20:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:1:6",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2810:2:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2803:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:10:6"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "2797:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2822:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2842:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2836:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2826:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2854:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2876:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "2892:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2896:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2888:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2888:11:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2905:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2901:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2901:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:25:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:38:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2858:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2969:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2971:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2971:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2971:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2928:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2940:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2925:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2925:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2948:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2960:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2945:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2945:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2922:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:46:6"
															},
															"nodeType": "YulIf",
															"src": "2919:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3007:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3011:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3000:22:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3031:17:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3042:6:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3035:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3064:6:6"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "3072:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3057:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3057:18:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3084:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3095:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3103:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:15:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3115:34:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3137:2:6"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "3141:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3133:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3133:11:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3146:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3129:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:20:6"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3119:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3181:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3190:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3193:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3183:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3183:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3183:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3164:6:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3172:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3161:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3161:19:6"
															},
															"nodeType": "YulIf",
															"src": "3158:39:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3206:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3221:2:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3225:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3217:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:11:6"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3210:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3293:79:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3325:3:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3319:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3319:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3307:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3307:23:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3307:23:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3343:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3354:3:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3359:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3350:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3350:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3343:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3248:3:6"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3253:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3245:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3261:23:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3263:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3274:3:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3279:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3270:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3270:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3263:3:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3241:3:6",
																"statements": []
															},
															"src": "3237:135:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3381:16:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3391:6:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2370:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2381:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2393:6:6",
														"type": ""
													}
												],
												"src": "2298:1105:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3584:161:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3601:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3612:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3594:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3639:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3650:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3635:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3628:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3628:30:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3667:72:6",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3712:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3724:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3735:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3720:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3720:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3675:36:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:64:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3667:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_storage__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3545:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3556:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3564:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3575:4:6",
														"type": ""
													}
												],
												"src": "3408:337:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3797:185:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3857:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3864:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3869:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3860:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3860:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3850:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3850:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3850:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3901:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3904:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3894:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3894:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3894:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3932:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3922:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3922:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3922:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3813:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3824:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3820:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3820:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3810:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3810:17:6"
															},
															"nodeType": "YulIf",
															"src": "3807:140:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3956:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3967:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3779:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3789:3:6",
														"type": ""
													}
												],
												"src": "3750:232:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_array_address_dyn_storage(value, pos) -> end\n    {\n        let length := sload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        mstore(0, value)\n        let srcPtr := keccak256(0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, 1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_rational_1000000000000000000_by_1_t_array$_t_address_$dyn_storage__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn_storage(value1, add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_storage__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn_storage(value1, add(headStart, 64))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806398d5fdca1161007157806398d5fdca14610168578063a6c41fec1461017e578063ad5c464814610191578063af6d1fe4146101a4578063c54e44eb146101b7578063e0bab4c4146101ca57600080fd5b80631694505e146100b957806324d16c1a146100f157806338c6cdd51461010457806346fab9e91461011f57806370b5180d1461013257806389a3027114610155575b600080fd5b6100d4737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d46100ff366004610a3d565b6101dd565b6100d473d9e1ce17f2641f24ae83637ab66a2cca9c378b9f81565b6100d461012d366004610a56565b610207565b61013a61024b565b604080519384526020840192909252908201526060016100e8565b6001546100d4906001600160a01b031681565b61017061088f565b6040519081526020016100e8565b6004546100d4906001600160a01b031681565b6000546100d4906001600160a01b031681565b6100d46101b2366004610a3d565b610a2d565b6002546100d4906001600160a01b031681565b6003546100d4906001600160a01b031681565b600581815481106101ed57600080fd5b6000918252602090912001546001600160a01b0316905081565b6007828154811061021757600080fd5b90600052602060002001818154811061022f57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6000806000806000805b6007548110156104745760005b600554811015610461578160000361035f5760006005828154811061028957610289610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f91670de0b6b3a764000091879081106102c5576102c5610a78565b906000526020600020016040518363ffffffff1660e01b81526004016102ec929190610ad7565b600060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103319190810190610b0e565b60018151811061034357610343610a78565b6020026020010151905083811115610359578093505b5061044f565b60006005828154811061037457610374610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918791879081106103a8576103a8610a78565b906000526020600020016040518363ffffffff1660e01b81526004016103cf929190610ad7565b600060405180830381865afa1580156103ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104149190810190610b0e565b60018151811061042657610426610a78565b6020026020010151905083811115610441579293508261044d565b8381111561044d578394505b505b8061045981610bcc565b915050610262565b508061046c81610bcc565b915050610255565b506000600560018154811061048b5761048b610a78565b6000918252602082200154600780546001600160a01b039092169263d06ca61f92670de0b6b3a76400009291906104c4576104c4610a78565b906000526020600020016040518363ffffffff1660e01b81526004016104eb929190610ad7565b600060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105309190810190610b0e565b60018151811061054257610542610a78565b602002602001015190506000600560018154811061056257610562610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918591600190811061059757610597610a78565b906000526020600020016040518363ffffffff1660e01b81526004016105be929190610ad7565b600060405180830381865afa1580156105db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106039190810190610b0e565b60018151811061061557610615610a78565b602002602001015190506000600560018154811061063557610635610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918591600290811061066a5761066a610a78565b906000526020600020016040518363ffffffff1660e01b8152600401610691929190610ad7565b600060405180830381865afa1580156106ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d69190810190610b0e565b6001815181106106e8576106e8610a78565b602002602001015190506000600560018154811061070857610708610a78565b600091825260209091200154600780546001600160a01b039092169163d06ca61f918591600390811061073d5761073d610a78565b906000526020600020016040518363ffffffff1660e01b8152600401610764929190610ad7565b600060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a99190810190610b0e565b6001815181106107bb576107bb610a78565b60200260200101519050858160056001815481106107db576107db610a78565b60009182526020909120015460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f9061081f90670de0b6b3a764000090600690600401610ad7565b600060405180830381865afa15801561083c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108649190810190610b0e565b60018151811061087657610876610a78565b6020026020010151985098509850505050505050909192565b60008060005b600654811015610a275781600582815481106108b3576108b3610a78565b60009182526020909120015460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f906108f790670de0b6b3a764000090600690600401610ad7565b600060405180830381865afa158015610914573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261093c9190810190610b0e565b60018151811061094e5761094e610a78565b60200260200101511115610a15576005818154811061096f5761096f610a78565b60009182526020909120015460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f906109b390670de0b6b3a764000090600690600401610ad7565b600060405180830381865afa1580156109d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f89190810190610b0e565b600181518110610a0a57610a0a610a78565b602002602001015191505b80610a1f81610bcc565b915050610895565b50919050565b600681815481106101ed57600080fd5b600060208284031215610a4f57600080fd5b5035919050565b60008060408385031215610a6957600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b6000815480845260208085019450836000528060002060005b83811015610acc5781546001600160a01b031687529582019560019182019101610aa7565b509495945050505050565b828152604060208201526000610af06040830184610a8e565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610b2157600080fd5b825167ffffffffffffffff80821115610b3957600080fd5b818501915085601f830112610b4d57600080fd5b815181811115610b5f57610b5f610af8565b8060051b604051601f19603f83011681018181108582111715610b8457610b84610af8565b604052918252848201925083810185019188831115610ba257600080fd5b938501935b82851015610bc057845184529385019392850192610ba7565b98975050505050505050565b600060018201610bec57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212208883fcaf07b16621278169abe5605d0e9cb76778ae1dbd0a048106bddcd26e0164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5FDCA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xA6C41FEC EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xAF6D1FE4 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xE0BAB4C4 EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1694505E EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x24D16C1A EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x38C6CDD5 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x46FAB9E9 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70B5180D EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x1DD JUMP JUMPDEST PUSH2 0xD4 PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F DUP2 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0xA56 JUMP JUMPDEST PUSH2 0x207 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA3D JUMP JUMPDEST PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xD4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x461 JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0x35F JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x289 JUMPI PUSH2 0x289 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x2C5 JUMPI PUSH2 0x2C5 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x309 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x331 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x343 JUMPI PUSH2 0x343 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x359 JUMPI DUP1 SWAP4 POP JUMPDEST POP PUSH2 0x44F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x374 JUMPI PUSH2 0x374 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP8 SWAP2 DUP8 SWAP1 DUP2 LT PUSH2 0x3A8 JUMPI PUSH2 0x3A8 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x414 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x426 JUMPI PUSH2 0x426 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x441 JUMPI SWAP3 SWAP4 POP DUP3 PUSH2 0x44D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x44D JUMPI DUP4 SWAP5 POP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x459 DUP2 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x262 JUMP JUMPDEST POP DUP1 PUSH2 0x46C DUP2 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x255 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48B PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xD06CA61F SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP3 SWAP2 SWAP1 PUSH2 0x4C4 JUMPI PUSH2 0x4C4 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x530 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x542 JUMPI PUSH2 0x542 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x597 JUMPI PUSH2 0x597 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BE SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x603 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH2 0x615 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x635 JUMPI PUSH2 0x635 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP6 SWAP2 PUSH1 0x2 SWAP1 DUP2 LT PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x691 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6D6 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x6E8 JUMPI PUSH2 0x6E8 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH2 0x708 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xD06CA61F SWAP2 DUP6 SWAP2 PUSH1 0x3 SWAP1 DUP2 LT PUSH2 0x73D JUMPI PUSH2 0x73D PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x764 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7A9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH2 0x7BB PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP6 DUP2 PUSH1 0x5 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x7DB JUMPI PUSH2 0x7DB PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x81F SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x864 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x876 JUMPI PUSH2 0x876 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xA27 JUMPI DUP2 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8B3 JUMPI PUSH2 0x8B3 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x8F7 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x914 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x93C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x94E JUMPI PUSH2 0x94E PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x96F JUMPI PUSH2 0x96F PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x9B3 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x4 ADD PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x9F8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA0A JUMPI PUSH2 0xA0A PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP JUMPDEST DUP1 PUSH2 0xA1F DUP2 PUSH2 0xBCC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x895 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xACC JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xAA7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xAF0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA8E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0xAF8 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB84 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xBC0 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xBA7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xBEC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP4 0xFC 0xAF SMOD 0xB1 PUSH7 0x21278169ABE560 0x5D 0xE SWAP13 0xB7 PUSH8 0x78AE1DBD0A048106 0xBD 0xDC 0xD2 PUSH15 0x164736F6C63430008120033000000 ",
							"sourceMap": "164:2686:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;190:84;;232:42;190:84;;;;;-1:-1:-1;;;;;178:32:6;;;160:51;;148:2;133:18;190:84:4;;;;;;;;722:58;;;;;;:::i;:::-;;:::i;280:86::-;;324:42;280:86;;827:27;;;;;;:::i;:::-;;:::i;1399:1449::-;;;:::i;:::-;;;;862:25:6;;;918:2;903:18;;896:34;;;;946:18;;;939:34;850:2;835:18;1399:1449:4;660:319:6;443:64:4;;;;;-1:-1:-1;;;;;443:64:4;;;1025:368;;;:::i;:::-;;;1130:25:6;;;1118:2;1103:18;1025:368:4;984:177:6;652:63:4;;;;;-1:-1:-1;;;;;652:63:4;;;373:64;;;;;-1:-1:-1;;;;;373:64:4;;;787:34;;;;;;:::i;:::-;;:::i;513:64::-;;;;;-1:-1:-1;;;;;513:64:4;;;583:63;;;;;-1:-1:-1;;;;;583:63:4;;;722:58;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;722:58:4;;-1:-1:-1;722:58:4;:::o;827:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;827:27:4;;-1:-1:-1;827:27:4;;-1:-1:-1;827:27:4:o;1399:1449::-;1451:7;1459;1467;1495:17;1522:15;1551:9;1547:846;1564:7;:14;1562:16;;1547:846;;;1602:9;1598:785;1617:3;:10;1615:12;;1598:785;;;1655:1;1658;1655:4;1652:664;;1682:16;1710:3;1714:1;1710:6;;;;;;;;:::i;:::-;;;;;;;;;;;1737:7;:10;;-1:-1:-1;;;;;1710:6:4;;;;1701:30;;1732:4;;1745:1;;1737:10;;;;;;:::i;:::-;;;;;;;;1701:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1701:47:4;;;;;;;;;;;;:::i;:::-;1749:1;1701:50;;;;;;;;:::i;:::-;;;;;;;1682:69;;1785:7;1776:8;:16;1773:85;;;1827:8;1819:16;;1773:85;1660:216;1652:664;;;1919:16;1947:3;1951:1;1947:6;;;;;;;;:::i;:::-;;;;;;;;;;;1977:7;:10;;-1:-1:-1;;;;;1947:6:4;;;;1938:30;;1969:7;;1985:1;;1977:10;;;;;;:::i;:::-;;;;;;;;1938:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1938:50:4;;;;;;;;;;;;:::i;:::-;1989:1;1938:53;;;;;;;;:::i;:::-;;;;;;;1919:72;;2025:7;2016:8;:16;2013:285;;;2071:7;;-1:-1:-1;2112:8:4;2013:285;;;2181:7;2172:8;:16;2169:129;;;2227:7;2215:19;;2169:129;1897:419;1652:664;1629:3;;;;:::i;:::-;;;;1598:785;;;-1:-1:-1;1580:3:4;;;;:::i;:::-;;;;1547:846;;;;2402:11;2425:3;2429:1;2425:6;;;;;;;;:::i;:::-;;;;;;;;;;2452:7;:10;;-1:-1:-1;;;;;2425:6:4;;;;2416:30;;2447:4;;2452:7;2425:6;2452:10;;;;:::i;:::-;;;;;;;;2416:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2416:47:4;;;;;;;;;;;;:::i;:::-;2464:1;2416:50;;;;;;;;:::i;:::-;;;;;;;2402:64;;2476:11;2499:3;2503:1;2499:6;;;;;;;;:::i;:::-;;;;;;;;;;;2525:7;:10;;-1:-1:-1;;;;;2499:6:4;;;;2490:30;;2521:3;;2499:6;;2525:10;;;;;;:::i;:::-;;;;;;;;2490:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2490:46:4;;;;;;;;;;;;:::i;:::-;2537:1;2490:49;;;;;;;;:::i;:::-;;;;;;;2476:63;;2549:13;2574:3;2578:1;2574:6;;;;;;;;:::i;:::-;;;;;;;;;;;2600:7;:10;;-1:-1:-1;;;;;2574:6:4;;;;2565:30;;2596:3;;2608:1;;2600:10;;;;;;:::i;:::-;;;;;;;;2565:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2565:46:4;;;;;;;;;;;;:::i;:::-;2612:1;2565:49;;;;;;;;:::i;:::-;;;;;;;2549:65;;2624:12;2648:3;2652:1;2648:6;;;;;;;;:::i;:::-;;;;;;;;;;;2676:7;:10;;-1:-1:-1;;;;;2648:6:4;;;;2639:30;;2670:5;;2684:1;;2676:10;;;;;;:::i;:::-;;;;;;;;2639:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2639:48:4;;;;;;;;;;;;:::i;:::-;2688:1;2639:51;;;;;;;;:::i;:::-;;;;;;;2624:66;;2781:9;2791:4;2805:3;2809:1;2805:6;;;;;;;;:::i;:::-;;;;;;;;;;;2796:41;;-1:-1:-1;;;2796:41:4;;-1:-1:-1;;;;;2805:6:4;;;;2796:30;;:41;;2827:4;;2832;;2796:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2796:41:4;;;;;;;;;;;;:::i;:::-;2838:1;2796:44;;;;;;;;:::i;:::-;;;;;;;2774:67;;;;;;;;;;;;1399:1449;;;:::o;1025:368::-;1064:7;1082:17;1113:9;1109:246;1128:4;:11;1126:13;;1109:246;;;1207:9;1171:3;1175:1;1171:6;;;;;;;;:::i;:::-;;;;;;;;;;;1162:41;;-1:-1:-1;;;1162:41:4;;-1:-1:-1;;;;;1171:6:4;;;;1162:30;;:41;;1193:4;;1198;;1162:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1162:41:4;;;;;;;;;;;;:::i;:::-;1204:1;1162:44;;;;;;;;:::i;:::-;;;;;;;:54;1159:186;;;1256:3;1260:1;1256:6;;;;;;;;:::i;:::-;;;;;;;;;;;1247:41;;-1:-1:-1;;;1247:41:4;;-1:-1:-1;;;;;1256:6:4;;;;1247:30;;:41;;1278:4;;1283;;1247:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1247:41:4;;;;;;;;;;;;:::i;:::-;1289:1;1247:44;;;;;;;;:::i;:::-;;;;;;;1235:56;;1159:186;1141:3;;;;:::i;:::-;;;;1109:246;;;-1:-1:-1;1376:9:4;1025:368;-1:-1:-1;1025:368:4:o;787:34::-;;;;;;;;;;;;222:180:6;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:6;;222:180;-1:-1:-1;222:180:6:o;407:248::-;475:6;483;536:2;524:9;515:7;511:23;507:32;504:52;;;552:1;549;542:12;504:52;-1:-1:-1;;575:23:6;;;645:2;630:18;;;617:32;;-1:-1:-1;407:248:6:o;1166:127::-;1227:10;1222:3;1218:20;1215:1;1208:31;1258:4;1255:1;1248:15;1282:4;1279:1;1272:15;1298:495;1359:3;1397:5;1391:12;1424:6;1419:3;1412:19;1450:4;1479:2;1474:3;1470:12;1463:19;;1501:5;1498:1;1491:16;1543:2;1540:1;1530:16;1564:1;1574:194;1588:6;1585:1;1582:13;1574:194;;;1653:13;;-1:-1:-1;;;;;1649:39:6;1637:52;;1709:12;;;;1685:1;1744:14;;;;1603:9;1574:194;;;-1:-1:-1;1784:3:6;;1298:495;-1:-1:-1;;;;;1298:495:6:o;1798:363::-;2028:6;2017:9;2010:25;2071:2;2066;2055:9;2051:18;2044:30;1991:4;2091:64;2151:2;2140:9;2136:18;2128:6;2091:64;:::i;:::-;2083:72;1798:363;-1:-1:-1;;;;1798:363:6:o;2166:127::-;2227:10;2222:3;2218:20;2215:1;2208:31;2258:4;2255:1;2248:15;2282:4;2279:1;2272:15;2298:1105;2393:6;2424:2;2467;2455:9;2446:7;2442:23;2438:32;2435:52;;;2483:1;2480;2473:12;2435:52;2516:9;2510:16;2545:18;2586:2;2578:6;2575:14;2572:34;;;2602:1;2599;2592:12;2572:34;2640:6;2629:9;2625:22;2615:32;;2685:7;2678:4;2674:2;2670:13;2666:27;2656:55;;2707:1;2704;2697:12;2656:55;2736:2;2730:9;2758:2;2754;2751:10;2748:36;;;2764:18;;:::i;:::-;2810:2;2807:1;2803:10;2842:2;2836:9;2905:2;2901:7;2896:2;2892;2888:11;2884:25;2876:6;2872:38;2960:6;2948:10;2945:22;2940:2;2928:10;2925:18;2922:46;2919:72;;;2971:18;;:::i;:::-;3007:2;3000:22;3057:18;;;3091:15;;;;-1:-1:-1;3133:11:6;;;3129:20;;;3161:19;;;3158:39;;;3193:1;3190;3183:12;3158:39;3217:11;;;;3237:135;3253:6;3248:3;3245:15;3237:135;;;3319:10;;3307:23;;3270:12;;;;3350;;;;3237:135;;;3391:6;2298:1105;-1:-1:-1;;;;;;;;2298:1105:6:o;3750:232::-;3789:3;3810:17;;;3807:140;;3869:10;3864:3;3860:20;3857:1;3850:31;3904:4;3901:1;3894:15;3932:4;3929:1;3922:15;3807:140;-1:-1:-1;3974:1:6;3963:13;;3750:232::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "622600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAI()": "2436",
								"OHM()": "2348",
								"USDC()": "2437",
								"USDT()": "2414",
								"WETH()": "2370",
								"allPath(uint256,uint256)": "6878",
								"dex(uint256)": "4626",
								"getBestPriceWithPaths()": "infinite",
								"getPrice()": "infinite",
								"path(uint256)": "4669",
								"sushiswapV2Router()": "250",
								"uniswapV2Router()": "206"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 373,
									"end": 437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 437,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 373,
									"end": 437,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 373,
									"end": 437,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 373,
									"end": 437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 373,
									"end": 437,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 395,
									"end": 437,
									"name": "PUSH",
									"source": 4,
									"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
								},
								{
									"begin": 373,
									"end": 437,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 373,
									"end": 437,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 373,
									"end": 437,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 373,
									"end": 437,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 373,
									"end": 437,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 507,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 443,
									"end": 507,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 443,
									"end": 507,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 465,
									"end": 507,
									"name": "PUSH",
									"source": 4,
									"value": "A0B86991C6218B36C1D19D4A2E9EB0CE3606EB48"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 443,
									"end": 507,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 443,
									"end": 507,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 513,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 513,
									"end": 577,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 513,
									"end": 577,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 513,
									"end": 577,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 513,
									"end": 577,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 535,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "DAC17F958D2EE523A2206206994597C13D831EC7"
								},
								{
									"begin": 513,
									"end": 577,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 513,
									"end": 577,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 513,
									"end": 577,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 583,
									"end": 646,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 583,
									"end": 646,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 583,
									"end": 646,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 583,
									"end": 646,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 583,
									"end": 646,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 604,
									"end": 646,
									"name": "PUSH",
									"source": 4,
									"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
								},
								{
									"begin": 583,
									"end": 646,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 583,
									"end": 646,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 583,
									"end": 646,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 652,
									"end": 715,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 673,
									"end": 715,
									"name": "PUSH",
									"source": 4,
									"value": "64AA3364F17A4D01C6F1751FD97C2BD3D7E7F1D5"
								},
								{
									"begin": 652,
									"end": 715,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 652,
									"end": 715,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 722,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 722,
									"end": 780,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 232,
									"end": 274,
									"name": "PUSH",
									"source": 4,
									"value": "7A250D5630B4CF539739DF2C5DACB4C659F2488D"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 722,
									"end": 780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 780,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 722,
									"end": 780,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 324,
									"end": 366,
									"name": "PUSH",
									"source": 4,
									"value": "D9E1CE17F2641F24AE83637AB66A2CCA9C378B9F"
								},
								{
									"begin": 722,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 722,
									"end": 780,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 722,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 722,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 722,
									"end": 780,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 722,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 722,
									"end": 780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 722,
									"end": 780,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 780,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 787,
									"end": 821,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 812,
									"end": 816,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 812,
									"end": 816,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 812,
									"end": 816,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 812,
									"end": 816,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 817,
									"end": 820,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 820,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 817,
									"end": 820,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 787,
									"end": 821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 787,
									"end": 821,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 787,
									"end": 821,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 861,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 884,
									"end": 909,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 902,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 898,
									"end": 902,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 898,
									"end": 902,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 898,
									"end": 902,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 898,
									"end": 902,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 898,
									"end": 902,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 903,
									"end": 907,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 903,
									"end": 907,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 903,
									"end": 907,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 903,
									"end": 907,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 903,
									"end": 907,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 884,
									"end": 891,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "607BCA8F7C1C56DA874DA29CD62C3769B9880D38A258A91FC6DD1CFB6B4D1A8E"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 884,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 884,
									"end": 909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 884,
									"end": 909,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 884,
									"end": 909,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 919,
									"end": 944,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 933,
									"end": 937,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 933,
									"end": 937,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 933,
									"end": 937,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 933,
									"end": 937,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 933,
									"end": 937,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 933,
									"end": 937,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 938,
									"end": 942,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 938,
									"end": 942,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 938,
									"end": 942,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 938,
									"end": 942,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 938,
									"end": 942,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 938,
									"end": 942,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 919,
									"end": 926,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 944,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "607BCA8F7C1C56DA874DA29CD62C3769B9880D38A258A91FC6DD1CFB6B4D1A8E"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 919,
									"end": 944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 919,
									"end": 944,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 919,
									"end": 944,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 954,
									"end": 978,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 968,
									"end": 972,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 968,
									"end": 972,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 968,
									"end": 972,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 973,
									"end": 976,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 973,
									"end": 976,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 973,
									"end": 976,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 954,
									"end": 961,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 968,
									"end": 972,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "607BCA8F7C1C56DA874DA29CD62C3769B9880D38A258A91FC6DD1CFB6B4D1A8E"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 954,
									"end": 978,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 954,
									"end": 978,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 954,
									"end": 978,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1002,
									"end": 1005,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1002,
									"end": 1005,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1002,
									"end": 1005,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1002,
									"end": 1005,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1002,
									"end": 1005,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1009,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1006,
									"end": 1009,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1006,
									"end": 1009,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 988,
									"end": 995,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1002,
									"end": 1005,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "607BCA8F7C1C56DA874DA29CD62C3769B9880D38A258A91FC6DD1CFB6B4D1A8E"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 988,
									"end": 1011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 988,
									"end": 1011,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 2850,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2850,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208883fcaf07b16621278169abe5605d0e9cb76778ae1dbd0a048106bddcd26e0164736f6c63430008120033",
									".code": [
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "98D5FDCA"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "98D5FDCA"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "A6C41FEC"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "AD5C4648"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "AF6D1FE4"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "C54E44EB"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "E0BAB4C4"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "1694505E"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "24D16C1A"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "38C6CDD5"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "46FAB9E9"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "70B5180D"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "89A30271"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 164,
											"end": 2850,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 190,
											"end": 274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"source": 4,
											"value": "7A250D5630B4CF539739DF2C5DACB4C659F2488D"
										},
										{
											"begin": 190,
											"end": 274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 190,
											"end": 274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 274,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 190,
											"end": 274,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 190,
											"end": 274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 274,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 190,
											"end": 274,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 722,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 722,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 280,
											"end": 366,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 280,
											"end": 366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 280,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 366,
											"name": "PUSH",
											"source": 4,
											"value": "D9E1CE17F2641F24AE83637AB66A2CCA9C378B9F"
										},
										{
											"begin": 280,
											"end": 366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 280,
											"end": 366,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 827,
											"end": 854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 827,
											"end": 854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1399,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 862,
											"end": 887,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 862,
											"end": 887,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 862,
											"end": 887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 918,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 896,
											"end": 930,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 896,
											"end": 930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 930,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 896,
											"end": 930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 946,
											"end": 964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 946,
											"end": 964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 946,
											"end": 964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 939,
											"end": 973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 850,
											"end": 852,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 660,
											"end": 979,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 443,
											"end": 507,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 443,
											"end": 507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 443,
											"end": 507,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 443,
											"end": 507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 443,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 443,
											"end": 507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 443,
											"end": 507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 443,
											"end": 507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 443,
											"end": 507,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 984,
											"end": 1161,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 652,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 652,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 652,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 652,
											"end": 715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 652,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 652,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 652,
											"end": 715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 652,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 652,
											"end": 715,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 373,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 373,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 437,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 373,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 373,
											"end": 437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 373,
											"end": 437,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 373,
											"end": 437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 373,
											"end": 437,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 787,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 787,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 513,
											"end": 577,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 513,
											"end": 577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 513,
											"end": 577,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 577,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 513,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 513,
											"end": 577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 513,
											"end": 577,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 513,
											"end": 577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 513,
											"end": 577,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 583,
											"end": 646,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 583,
											"end": 646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 583,
											"end": 646,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 583,
											"end": 646,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 583,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 583,
											"end": 646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 583,
											"end": 646,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 583,
											"end": 646,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 583,
											"end": 646,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 722,
											"end": 780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 722,
											"end": 780,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 722,
											"end": 780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 827,
											"end": 854,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 827,
											"end": 854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 827,
											"end": 854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 827,
											"end": 854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1451,
											"end": 1458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1564,
											"end": 1578,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1578,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1578,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1627,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1710,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1744,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1731,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 1701,
											"end": 1731,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1701,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1701,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1701,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1751,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1858,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1773,
											"end": 1858,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1773,
											"end": 1858,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1773,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1919,
											"end": 1935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1950,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1947,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 1976,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1977,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1938,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1938,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1938,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1938,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1919,
											"end": 1991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1919,
											"end": 1991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2032,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2298,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2013,
											"end": 2298,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2112,
											"end": 2120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2013,
											"end": 2298,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2298,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2013,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2188,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2188,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2298,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2169,
											"end": 2298,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2234,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2298,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2169,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 2316,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1652,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1629,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1598,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1580,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 2393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2428,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2425,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 2416,
											"end": 2446,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2447,
											"end": 2451,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2459,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2452,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2416,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2416,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2416,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2416,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2466,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2502,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2499,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2532,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 2490,
											"end": 2520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2525,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2490,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2490,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2490,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2539,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2476,
											"end": 2539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2578,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2574,
											"end": 2580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2595,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 2565,
											"end": 2595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2600,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2565,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2565,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2565,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2565,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2651,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2648,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2669,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 2639,
											"end": 2669,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2675,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2676,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2639,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2639,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2639,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2639,
											"end": 2690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2808,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2805,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D06CA61F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2826,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 2796,
											"end": 2826,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2831,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2827,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2796,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2796,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2796,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2796,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2796,
											"end": 2840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 2848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1128,
											"end": 1139,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1139,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1174,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1171,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D06CA61F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1192,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 1162,
											"end": 1192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1197,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1193,
											"end": 1197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1198,
											"end": 1202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1162,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1162,
											"end": 1203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1162,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1162,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1216,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1345,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1159,
											"end": 1345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1260,
											"end": 1261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1256,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D06CA61F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "D06CA61F"
										},
										{
											"begin": 1247,
											"end": 1277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1283,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1247,
											"end": 1288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1247,
											"end": 1288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1247,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1291,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1159,
											"end": 1345,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1159,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1141,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1109,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1376,
											"end": 1385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 787,
											"end": 821,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 222,
											"end": 402,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 222,
											"end": 402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 373,
											"end": 396,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 373,
											"end": 396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 222,
											"end": 402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 655,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 407,
											"end": 655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 489,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 515,
											"end": 522,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 511,
											"end": 534,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 539,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 504,
											"end": 556,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 504,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 504,
											"end": 556,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 542,
											"end": 554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 504,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 504,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 575,
											"end": 598,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 575,
											"end": 598,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 575,
											"end": 598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 645,
											"end": 647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 630,
											"end": 648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 630,
											"end": 648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 617,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 617,
											"end": 649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 407,
											"end": 655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1293,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1166,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1237,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1222,
											"end": 1225,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1218,
											"end": 1238,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1282,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1287,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1793,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1298,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1422,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1454,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1479,
											"end": 1481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1477,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1482,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1506,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1507,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1546,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1595,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1666,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1688,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1689,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1744,
											"end": 1758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1758,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1574,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1787,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1787,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1793,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1798,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2035,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2134,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2091,
											"end": 2155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2155,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2091,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2155,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2161,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 2161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2293,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2166,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2222,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2218,
											"end": 2238,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2279,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2287,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2298,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2464,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2453,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2465,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2470,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2473,
											"end": 2485,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2435,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2589,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2604,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2572,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2682,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2666,
											"end": 2693,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2656,
											"end": 2711,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2709,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2711,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2656,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2761,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2748,
											"end": 2784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2764,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2813,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2844,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 2909,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2942,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 2943,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2968,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2919,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2971,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2971,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 2989,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2971,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3075,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3129,
											"end": 3149,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3180,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3180,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3180,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3251,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3329,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3329,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3330,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3282,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3270,
											"end": 3282,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3237,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3397,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 3403,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 3403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3982,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3750,
											"end": 3982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3827,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3810,
											"end": 3827,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3807,
											"end": 3947,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3869,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3860,
											"end": 3880,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3908,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3894,
											"end": 3909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3947,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3807,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3963,
											"end": 3976,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								},
								"607BCA8F7C1C56DA874DA29CD62C3769B9880D38A258A91FC6DD1CFB6B4D1A8E": "a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688"
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEXLogic.sol",
								"uniForkInterface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DAI()": "e0bab4c4",
							"OHM()": "a6c41fec",
							"USDC()": "89a30271",
							"USDT()": "c54e44eb",
							"WETH()": "ad5c4648",
							"allPath(uint256,uint256)": "46fab9e9",
							"dex(uint256)": "24d16c1a",
							"getBestPriceWithPaths()": "70b5180d",
							"getPrice()": "98d5fdca",
							"path(uint256)": "af6d1fe4",
							"sushiswapV2Router()": "38c6cdd5",
							"uniswapV2Router()": "1694505e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OHM\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPath\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBestPriceWithPaths\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiswapV2Router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEXLogic.sol\":\"PathFinding\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"DEXLogic.sol\":{\"keccak256\":\"0x85271f8c5cdc122efac6ebc7cc1dde9d7f138a45652c02cbf2b430658b14b2d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e40e96771466be383124da8ef47f0a989442b0d8d58e1382c76cf151ac6a2fa\",\"dweb:/ipfs/QmaMCSLFoaNuU9hBm7939c67xLdUkJypn45LUY2u3aombT\"]},\"uniForkInterface.sol\":{\"keccak256\":\"0x983f4fce17af98ffe2248013241d963ee1276726d2f3612194a96f5e81ac6f6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://241ab6d69e29e968e7ee5b6055e893d74a105f9fd1c92d5e856f8bf6589c5029\",\"dweb:/ipfs/QmbvKkKogkeoXde51vBv97oGBYFLg5R2SgjD3cGX4CSDnQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 725,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "WETH",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 728,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "USDC",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 731,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "USDT",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 734,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "DAI",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 737,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "OHM",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 743,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "dex",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 749,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "path",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 753,
								"contract": "DEXLogic.sol:PathFinding",
								"label": "allPath",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_array(t_address)dyn_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_array(t_address)dyn_storage)dyn_storage": {
								"base": "t_array(t_address)dyn_storage",
								"encoding": "dynamic_array",
								"label": "address[][]",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"uniForkInterface.sol": {
				"IUNIFORK": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"uniForkInterface.sol\":\"IUNIFORK\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"uniForkInterface.sol\":{\"keccak256\":\"0x983f4fce17af98ffe2248013241d963ee1276726d2f3612194a96f5e81ac6f6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://241ab6d69e29e968e7ee5b6055e893d74a105f9fd1c92d5e856f8bf6589c5029\",\"dweb:/ipfs/QmbvKkKogkeoXde51vBv97oGBYFLg5R2SgjD3cGX4CSDnQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 665,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 690,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 712,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"1419:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1419:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"1428:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "1428:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1436:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "1436:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 586,
							"linearizedBaseContracts": [
								586,
								689,
								664,
								711
							],
							"name": "ERC20",
							"nameLocation": "1410:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1457:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1509:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1599:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1583:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1583:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1633:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1618:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1618:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1659:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1644:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1644:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2032:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2042:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2050:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2042:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2042:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2065:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2065:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1673:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1988:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2023:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2009:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:0"
									},
									"scope": 586,
									"src": "1976:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2223:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2240:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2233:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2095:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2163:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2190:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2208:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2208:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:15:0"
									},
									"scope": 586,
									"src": "2154:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2436:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2446:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2258:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2374:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2421:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2421:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:15:0"
									},
									"scope": 586,
									"src": "2365:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										688
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3156:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3166:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2473:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3100:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3131:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3149:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3149:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:7:0"
									},
									"scope": 586,
									"src": "3091:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3312:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3329:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3322:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3188:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3251:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3285:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3262:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3303:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3302:9:0"
									},
									"scope": 586,
									"src": "3242:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3489:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3506:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3506:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3499:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3354:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3415:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3462:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:0"
									},
									"scope": 586,
									"src": "3406:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3812:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3830:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3822:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3838:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3838:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3877:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3860:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3860:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3898:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3537:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3736:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3788:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3745:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3765:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3806:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3806:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3805:6:0"
									},
									"scope": 586,
									"src": "3727:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4072:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4089:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4101:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4089:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4089:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4082:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3922:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3983:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4045:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4016:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4008:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:9:0"
									},
									"scope": 586,
									"src": "3974:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										651
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4520:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4538:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4530:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "4546:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4577:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4568:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4568:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4617:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4610:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4129:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4440:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4496:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4456:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4448:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4473:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4465:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4514:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4513:6:0"
									},
									"scope": 586,
									"src": "4431:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5323:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5341:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5333:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5333:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5351:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5333:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "5373:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5373:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5437:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5441:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5421:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5421:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5421:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5458:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4634:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5199:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5251:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5243:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5317:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:6:0"
									},
									"scope": 586,
									"src": "5190:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5965:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5983:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5975:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5991:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5991:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6048:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6055:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6038:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6038:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6038:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "6013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6013:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6094:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6087:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5482:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5880:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5906:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5898:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5923:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5959:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5959:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:6:0"
									},
									"scope": 586,
									"src": "5871:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6691:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6709:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6701:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6701:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "6717:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6717:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6701:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6747:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6739:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6776:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6766:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6766:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6739:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6809:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6829:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6809:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6846:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6801:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6801:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6896:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6929:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6945:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6964:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6945:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "6920:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6920:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6920:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7001:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6111:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6601:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6644:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6636:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6618:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6685:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6684:6:0"
									},
									"scope": 586,
									"src": "6592:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7581:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7599:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7615:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7607:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7607:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7607:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7599:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7619:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7591:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7591:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7677:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7691:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7683:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7683:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7677:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7695:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7669:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7669:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7771:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7775:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "7744:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7744:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7744:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7801:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7793:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7815:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7825:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7815:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7793:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7863:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7848:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7871:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7840:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7840:72:0"
											},
											{
												"id": 332,
												"nodeType": "UncheckedBlock",
												"src": "7922:273:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7946:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7946:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7964:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7978:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7964:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7946:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7946:38:0"
													},
													{
														"expression": {
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8161:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "8171:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8161:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8178:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8161:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "8161:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8219:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8225:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8229:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8210:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8210:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8205:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8267:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8273:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8277:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "8247:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8247:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7025:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7482:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7509:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7501:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7531:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7551:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7581:0:0"
									},
									"scope": 586,
									"src": "7473:818:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8632:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8650:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8669:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8661:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8661:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8661:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8650:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8673:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8642:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8642:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8747:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8739:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8739:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "8718:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8718:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8778:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8794:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8778:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8778:22:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "8810:175:0",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8946:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8956:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8946:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8968:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8946:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "8946:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9008:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9008:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9020:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9029:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8999:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "8994:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9067:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9067:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9067:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9047:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9047:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9047:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8297:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8576:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:0"
									},
									"scope": 586,
									"src": "8567:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9487:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9524:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9516:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9516:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9516:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9505:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9497:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9596:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9613:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9605:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9605:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "9575:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9575:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9575:49:0"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9643:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "9635:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"baseExpression": {
														"id": 432,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9660:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 434,
													"indexExpression": {
														"id": 433,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "9670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9660:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9635:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "9696:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9714:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9696:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9722:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9688:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "9688:71:0"
											},
											{
												"id": 455,
												"nodeType": "UncheckedBlock",
												"src": "9769:194:0",
												"statements": [
													{
														"expression": {
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 443,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9793:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"id": 444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9803:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9793:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 446,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9814:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 447,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9831:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9814:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9793:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "9793:44:0"
													},
													{
														"expression": {
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 451,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "9930:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 452,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9946:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9930:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 454,
														"nodeType": "ExpressionStatement",
														"src": "9930:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10004:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9996:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9996:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9996:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "9978:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9978:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "EmitStatement",
												"src": "9973:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "10046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10063:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "10026:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10026:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "10026:48:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9108:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9431:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9445:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9437:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9462:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9454:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:0"
									},
									"scope": 586,
									"src": "9422:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "10617:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10652:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10644:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10644:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10644:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10656:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "10627:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "10713:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10732:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10724:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10724:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10724:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10713:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10736:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10705:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "10705:68:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10784:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10796:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10784:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10784:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "10814:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10784:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "10784:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "10844:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "10860:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "10835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10835:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "10830:37:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "10087:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10513:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10562:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10554:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10521:78:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10617:0:0"
									},
									"scope": 586,
									"src": "10504:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11275:321:0",
										"statements": [
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11293:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11285:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11322:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11312:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11312:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11285:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "11351:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11376:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11376:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 538,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11371:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11385:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11371:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "11347:243:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "11390:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "11412:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 546,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "11432:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11412:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11440:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11404:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "11404:68:0"
														},
														{
															"id": 559,
															"nodeType": "UncheckedBlock",
															"src": "11486:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 552,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "11523:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 553,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "11530:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 554,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "11539:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 555,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "11558:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11539:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 551,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "11514:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11514:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "11514:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "10880:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11164:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11197:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11189:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11220:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11212:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11179:78:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11275:0:0"
									},
									"scope": 586,
									"src": "11155:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12299:2:0",
										"statements": []
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "11602:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12189:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12249:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12241:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12269:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12261:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:72:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12299:0:0"
									},
									"scope": 586,
									"src": "12180:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "13007:2:0",
										"statements": []
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12307:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12898:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12935:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12927:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12957:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12949:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12977:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12969:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12917:72:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13007:0:0"
									},
									"scope": 586,
									"src": "12889:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 587,
							"src": "1401:11610:0",
							"usedErrors": []
						}
					],
					"src": "105:12907:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 598,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 607,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 664,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 664,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 664,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 664,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 664,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 664,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 665,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 665,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "305:6:2"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 689,
							"linearizedBaseContracts": [
								689,
								664
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 689,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 689,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 685,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 689,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 690,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 697,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 696,
												"id": 699,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 711,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 706,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 705,
												"id": 708,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 711,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"DEXLogic.sol": {
				"ast": {
					"absolutePath": "DEXLogic.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						],
						"IUNIFORK": [
							1056
						],
						"PathFinding": [
							1042
						]
					},
					"id": 1043,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "uniForkInterface.sol",
							"file": "./uniForkInterface.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1043,
							"sourceUnit": 1057,
							"src": "57:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 714,
										"name": "IUNIFORK",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1056,
										"src": "65:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1043,
							"sourceUnit": 587,
							"src": "107:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PathFinding",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1042,
							"linearizedBaseContracts": [
								1042
							],
							"name": "PathFinding",
							"nameLocation": "173:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "1694505e",
									"id": 719,
									"mutability": "constant",
									"name": "uniswapV2Router",
									"nameLocation": "214:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "190:84:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 717,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "190:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
										"id": 718,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "232:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "38c6cdd5",
									"id": 722,
									"mutability": "constant",
									"name": "sushiswapV2Router",
									"nameLocation": "304:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "280:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 720,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864396531634531376632363431663234614538333633376162363661326363613943333738423946",
										"id": 721,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "324:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 725,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "388:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "373:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 723,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 724,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "395:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 728,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "458:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "443:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 726,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
										"id": 727,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "465:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c54e44eb",
									"id": 731,
									"mutability": "mutable",
									"name": "USDT",
									"nameLocation": "528:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "513:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 729,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "513:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864414331374639353844326565353233613232303632303639393435393743313344383331656337",
										"id": 730,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "535:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0bab4c4",
									"id": 734,
									"mutability": "mutable",
									"name": "DAI",
									"nameLocation": "598:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "583:63:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 732,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
										"id": 733,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "604:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6c41fec",
									"id": 737,
									"mutability": "mutable",
									"name": "OHM",
									"nameLocation": "667:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "652:63:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 735,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "652:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836346161333336344631376134443031633666313735314664393743324244334437653766314435",
										"id": 736,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "673:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24d16c1a",
									"id": 743,
									"mutability": "mutable",
									"name": "dex",
									"nameLocation": "739:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "722:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 738,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "722:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 739,
										"nodeType": "ArrayTypeName",
										"src": "722:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": {
										"components": [
											{
												"id": 740,
												"name": "uniswapV2Router",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 719,
												"src": "746:15:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 741,
												"name": "sushiswapV2Router",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 722,
												"src": "762:17:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"id": 742,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "745:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
											"typeString": "address[2] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af6d1fe4",
									"id": 749,
									"mutability": "mutable",
									"name": "path",
									"nameLocation": "804:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "787:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 744,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "787:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 745,
										"nodeType": "ArrayTypeName",
										"src": "787:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": {
										"components": [
											{
												"id": 746,
												"name": "WETH",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 725,
												"src": "812:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											{
												"id": 747,
												"name": "OHM",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 737,
												"src": "817:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"id": 748,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "811:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
											"typeString": "address[2] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46fab9e9",
									"id": 753,
									"mutability": "mutable",
									"name": "allPath",
									"nameLocation": "847:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1042,
									"src": "827:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
										"typeString": "address[][]"
									},
									"typeName": {
										"baseType": {
											"baseType": {
												"id": 750,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "827:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 751,
											"nodeType": "ArrayTypeName",
											"src": "827:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										},
										"id": 752,
										"nodeType": "ArrayTypeName",
										"src": "827:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr",
											"typeString": "address[][]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "874:144:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"id": 759,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "898:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 760,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "903:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 761,
															"isConstant": false,
															"isInlineArray": true,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "897:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														],
														"expression": {
															"id": 756,
															"name": "allPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "884:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																"typeString": "address[] storage ref[] storage ref"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "892:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "884:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$_t_array$_t_address_$dyn_storage_$returns$__$attached_to$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage ref[] storage pointer,address[] storage ref)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "884:25:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"id": 767,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "933:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 768,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "938:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 769,
															"isConstant": false,
															"isInlineArray": true,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "932:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														],
														"expression": {
															"id": 764,
															"name": "allPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "919:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																"typeString": "address[] storage ref[] storage ref"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "927:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "919:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$_t_array$_t_address_$dyn_storage_$returns$__$attached_to$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage ref[] storage pointer,address[] storage ref)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "919:25:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"id": 775,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "968:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 776,
																	"name": "DAI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "973:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 777,
															"isConstant": false,
															"isInlineArray": true,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "967:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														],
														"expression": {
															"id": 772,
															"name": "allPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																"typeString": "address[] storage ref[] storage ref"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "962:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "954:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$_t_array$_t_address_$dyn_storage_$returns$__$attached_to$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage ref[] storage pointer,address[] storage ref)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "954:24:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"id": 783,
																	"name": "DAI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "1002:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 784,
																	"name": "OHM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "1006:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 785,
															"isConstant": false,
															"isInlineArray": true,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1001:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														],
														"expression": {
															"id": 780,
															"name": "allPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "988:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																"typeString": "address[] storage ref[] storage ref"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "996:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "988:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$_t_array$_t_address_$dyn_storage_$returns$__$attached_to$_t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage ref[] storage pointer,address[] storage ref)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "988:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "988:23:4"
											}
										]
									},
									"id": 789,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:2:4"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:4"
									},
									"scope": 1042,
									"src": "861:157:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1072:321:4",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "bestValue",
														"nameLocation": "1090:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "1082:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1082:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"nodeType": "VariableDeclarationStatement",
												"src": "1082:17:4"
											},
											{
												"body": {
													"id": 842,
													"nodeType": "Block",
													"src": "1145:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1193:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			{
																				"id": 815,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "1198:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				{
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 809,
																							"name": "dex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 743,
																							"src": "1171:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 811,
																						"indexExpression": {
																							"id": 810,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 798,
																							"src": "1175:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1171:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 808,
																					"name": "IUNIFORK",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "1162:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																						"typeString": "type(contract IUNIFORK)"
																					}
																				},
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1162:16:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																					"typeString": "contract IUNIFORK"
																				}
																			},
																			"id": 813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1179:13:4",
																			"memberName": "getAmountsOut",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1055,
																			"src": "1162:30:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																				"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
																			}
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1162:41:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 818,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1204:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1162:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 819,
																	"name": "bestValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "1207:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1162:54:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 840,
																"nodeType": "Block",
																"src": "1323:22:4",
																"statements": [
																	{
																		"expression": {
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 836,
																				"name": "bestValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "1324:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 837,
																				"name": "bestValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "1334:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1324:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 839,
																		"nodeType": "ExpressionStatement",
																		"src": "1324:19:4"
																	}
																]
															},
															"id": 841,
															"nodeType": "IfStatement",
															"src": "1159:186:4",
															"trueBody": {
																"id": 835,
																"nodeType": "Block",
																"src": "1217:89:4",
																"statements": [
																	{
																		"expression": {
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 821,
																				"name": "bestValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "1235:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 828,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1278:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						},
																						{
																							"id": 829,
																							"name": "path",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 749,
																							"src": "1283:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							{
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 823,
																										"name": "dex",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 743,
																										"src": "1256:3:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_address_$dyn_storage",
																											"typeString": "address[] storage ref"
																										}
																									},
																									"id": 825,
																									"indexExpression": {
																										"id": 824,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 798,
																										"src": "1260:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "1256:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 822,
																								"name": "IUNIFORK",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1056,
																								"src": "1247:8:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																									"typeString": "type(contract IUNIFORK)"
																								}
																							},
																							"id": 826,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1247:16:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																								"typeString": "contract IUNIFORK"
																							}
																						},
																						"id": 827,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1264:13:4",
																						"memberName": "getAmountsOut",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1055,
																						"src": "1247:30:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																							"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
																						}
																					},
																					"id": 830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1247:41:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 832,
																				"indexExpression": {
																					"hexValue": "31",
																					"id": 831,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1289:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1247:44:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1235:56:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 834,
																		"nodeType": "ExpressionStatement",
																		"src": "1235:56:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 801,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1126:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 802,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "1128:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1133:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1128:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1126:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"initializationExpression": {
													"assignments": [
														798
													],
													"declarations": [
														{
															"constant": false,
															"id": 798,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1121:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 843,
															"src": "1113:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 797,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1113:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 800,
													"initialValue": {
														"hexValue": "30",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1113:11:4"
												},
												"loopExpression": {
													"expression": {
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1141:3:4",
														"subExpression": {
															"id": 805,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1141:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 807,
													"nodeType": "ExpressionStatement",
													"src": "1141:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1109:246:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 844,
															"name": "bestValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "1376:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 845,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1375:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 846,
												"nodeType": "Return",
												"src": "1368:18:4"
											}
										]
									},
									"functionSelector": "98d5fdca",
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "1034:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1064:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:9:4"
									},
									"scope": 1042,
									"src": "1025:368:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "1475:1373:4",
										"statements": [
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "bestValue",
														"nameLocation": "1503:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "1495:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1495:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"nodeType": "VariableDeclarationStatement",
												"src": "1495:17:4"
											},
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "tempVal",
														"nameLocation": "1530:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "1522:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1522:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"nodeType": "VariableDeclarationStatement",
												"src": "1522:15:4"
											},
											{
												"body": {
													"id": 959,
													"nodeType": "Block",
													"src": "1584:809:4",
													"statements": [
														{
															"body": {
																"id": 957,
																"nodeType": "Block",
																"src": "1633:750:4",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 884,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "1655:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1658:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1655:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 955,
																			"nodeType": "Block",
																			"src": "1897:419:4",
																			"statements": [
																				{
																					"assignments": [
																						914
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 914,
																							"mutability": "mutable",
																							"name": "tempVal2",
																							"nameLocation": "1927:8:4",
																							"nodeType": "VariableDeclaration",
																							"scope": 955,
																							"src": "1919:16:4",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 913,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1919:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 928,
																					"initialValue": {
																						"baseExpression": {
																							"arguments": [
																								{
																									"id": 921,
																									"name": "tempVal",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 861,
																									"src": "1969:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"baseExpression": {
																										"id": 922,
																										"name": "allPath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 753,
																										"src": "1977:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																											"typeString": "address[] storage ref[] storage ref"
																										}
																									},
																									"id": 924,
																									"indexExpression": {
																										"id": 923,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 864,
																										"src": "1985:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "1977:10:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_storage",
																										"typeString": "address[] storage ref"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_array$_t_address_$dyn_storage",
																										"typeString": "address[] storage ref"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"baseExpression": {
																												"id": 916,
																												"name": "dex",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 743,
																												"src": "1947:3:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_address_$dyn_storage",
																													"typeString": "address[] storage ref"
																												}
																											},
																											"id": 918,
																											"indexExpression": {
																												"id": 917,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 874,
																												"src": "1951:1:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "1947:6:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"id": 915,
																										"name": "IUNIFORK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1056,
																										"src": "1938:8:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																											"typeString": "type(contract IUNIFORK)"
																										}
																									},
																									"id": 919,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "1938:16:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																										"typeString": "contract IUNIFORK"
																									}
																								},
																								"id": 920,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1955:13:4",
																								"memberName": "getAmountsOut",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1055,
																								"src": "1938:30:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																									"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
																								}
																							},
																							"id": 925,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1938:50:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 927,
																						"indexExpression": {
																							"hexValue": "31",
																							"id": 926,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1989:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1938:53:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "1919:72:4"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 931,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 929,
																							"name": "tempVal2",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 914,
																							"src": "2016:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"id": 930,
																							"name": "tempVal",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "2025:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2016:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"condition": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 943,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 941,
																								"name": "tempVal2",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 914,
																								"src": "2172:8:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">",
																							"rightExpression": {
																								"id": 942,
																								"name": "tempVal",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 861,
																								"src": "2181:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2172:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"id": 953,
																						"nodeType": "IfStatement",
																						"src": "2169:129:4",
																						"trueBody": {
																							"id": 952,
																							"nodeType": "Block",
																							"src": "2189:109:4",
																							"statements": [
																								{
																									"expression": {
																										"id": 946,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftHandSide": {
																											"id": 944,
																											"name": "bestValue",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 858,
																											"src": "2215:9:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "Assignment",
																										"operator": "=",
																										"rightHandSide": {
																											"id": 945,
																											"name": "tempVal",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 861,
																											"src": "2227:7:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "2215:19:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 947,
																									"nodeType": "ExpressionStatement",
																									"src": "2215:19:4"
																								},
																								{
																									"expression": {
																										"id": 950,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftHandSide": {
																											"id": 948,
																											"name": "tempVal",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 861,
																											"src": "2260:7:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "Assignment",
																										"operator": "=",
																										"rightHandSide": {
																											"id": 949,
																											"name": "tempVal",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 861,
																											"src": "2268:7:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "2260:15:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 951,
																									"nodeType": "ExpressionStatement",
																									"src": "2260:15:4"
																								}
																							]
																						}
																					},
																					"id": 954,
																					"nodeType": "IfStatement",
																					"src": "2013:285:4",
																					"trueBody": {
																						"id": 940,
																						"nodeType": "Block",
																						"src": "2033:110:4",
																						"statements": [
																							{
																								"expression": {
																									"id": 934,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 932,
																										"name": "bestValue",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 858,
																										"src": "2059:9:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"id": 933,
																										"name": "tempVal",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 861,
																										"src": "2071:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2059:19:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 935,
																								"nodeType": "ExpressionStatement",
																								"src": "2059:19:4"
																							},
																							{
																								"expression": {
																									"id": 938,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 936,
																										"name": "tempVal",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 861,
																										"src": "2104:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"id": 937,
																										"name": "tempVal2",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 914,
																										"src": "2112:8:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2104:16:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 939,
																								"nodeType": "ExpressionStatement",
																								"src": "2104:16:4"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 956,
																		"nodeType": "IfStatement",
																		"src": "1652:664:4",
																		"trueBody": {
																			"id": 912,
																			"nodeType": "Block",
																			"src": "1660:216:4",
																			"statements": [
																				{
																					"assignments": [
																						888
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 888,
																							"mutability": "mutable",
																							"name": "tempVal2",
																							"nameLocation": "1690:8:4",
																							"nodeType": "VariableDeclaration",
																							"scope": 912,
																							"src": "1682:16:4",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 887,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1682:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 902,
																					"initialValue": {
																						"baseExpression": {
																							"arguments": [
																								{
																									"hexValue": "31653138",
																									"id": 895,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1732:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000000000000000000_by_1",
																										"typeString": "int_const 1000000000000000000"
																									},
																									"value": "1e18"
																								},
																								{
																									"baseExpression": {
																										"id": 896,
																										"name": "allPath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 753,
																										"src": "1737:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																											"typeString": "address[] storage ref[] storage ref"
																										}
																									},
																									"id": 898,
																									"indexExpression": {
																										"id": 897,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 864,
																										"src": "1745:1:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "1737:10:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_storage",
																										"typeString": "address[] storage ref"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000000000000000000_by_1",
																										"typeString": "int_const 1000000000000000000"
																									},
																									{
																										"typeIdentifier": "t_array$_t_address_$dyn_storage",
																										"typeString": "address[] storage ref"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"baseExpression": {
																												"id": 890,
																												"name": "dex",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 743,
																												"src": "1710:3:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_address_$dyn_storage",
																													"typeString": "address[] storage ref"
																												}
																											},
																											"id": 892,
																											"indexExpression": {
																												"id": 891,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 874,
																												"src": "1714:1:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "1710:6:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"id": 889,
																										"name": "IUNIFORK",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1056,
																										"src": "1701:8:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																											"typeString": "type(contract IUNIFORK)"
																										}
																									},
																									"id": 893,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "1701:16:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																										"typeString": "contract IUNIFORK"
																									}
																								},
																								"id": 894,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1718:13:4",
																								"memberName": "getAmountsOut",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1055,
																								"src": "1701:30:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																									"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
																								}
																							},
																							"id": 899,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1701:47:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 901,
																						"indexExpression": {
																							"hexValue": "31",
																							"id": 900,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1749:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1701:50:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "1682:69:4"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 905,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 903,
																							"name": "tempVal2",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 888,
																							"src": "1776:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"id": 904,
																							"name": "tempVal",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "1785:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1776:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 911,
																					"nodeType": "IfStatement",
																					"src": "1773:85:4",
																					"trueBody": {
																						"id": 910,
																						"nodeType": "Block",
																						"src": "1793:65:4",
																						"statements": [
																							{
																								"expression": {
																									"id": 908,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 906,
																										"name": "tempVal",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 861,
																										"src": "1819:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"id": 907,
																										"name": "tempVal2",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 888,
																										"src": "1827:8:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "1819:16:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 909,
																								"nodeType": "ExpressionStatement",
																								"src": "1819:16:4"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 877,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "1615:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 878,
																		"name": "dex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "1617:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1621:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1617:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1615:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 958,
															"initializationExpression": {
																"assignments": [
																	874
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 874,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "1610:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 958,
																		"src": "1602:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 873,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1602:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 876,
																"initialValue": {
																	"hexValue": "30",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1612:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1602:11:4"
															},
															"loopExpression": {
																"expression": {
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1629:3:4",
																	"subExpression": {
																		"id": 881,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "1629:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 883,
																"nodeType": "ExpressionStatement",
																"src": "1629:3:4"
															},
															"nodeType": "ForStatement",
															"src": "1598:785:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 866,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "1562:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 867,
															"name": "allPath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1564:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																"typeString": "address[] storage ref[] storage ref"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1572:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1564:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1562:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 960,
												"initializationExpression": {
													"assignments": [
														864
													],
													"declarations": [
														{
															"constant": false,
															"id": 864,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1559:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 960,
															"src": "1551:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 863,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1551:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 865,
													"nodeType": "VariableDeclarationStatement",
													"src": "1551:9:4"
												},
												"loopExpression": {
													"expression": {
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1580:3:4",
														"subExpression": {
															"id": 870,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "1580:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 872,
													"nodeType": "ExpressionStatement",
													"src": "1580:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1547:846:4"
											},
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "one",
														"nameLocation": "2410:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "2402:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2402:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"baseExpression": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2447:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															{
																"baseExpression": {
																	"id": 970,
																	"name": "allPath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2452:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																		"typeString": "address[] storage ref[] storage ref"
																	}
																},
																"id": 972,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2460:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2452:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 964,
																			"name": "dex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "2425:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 966,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2429:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2425:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 963,
																	"name": "IUNIFORK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2416:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																		"typeString": "type(contract IUNIFORK)"
																	}
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2416:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																	"typeString": "contract IUNIFORK"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2433:13:4",
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "2416:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2416:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 975,
													"indexExpression": {
														"hexValue": "31",
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2464:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2416:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2402:64:4"
											},
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "two",
														"nameLocation": "2484:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "2476:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2476:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"baseExpression": {
														"arguments": [
															{
																"id": 985,
																"name": "one",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "2521:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 986,
																	"name": "allPath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2525:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																		"typeString": "address[] storage ref[] storage ref"
																	}
																},
																"id": 988,
																"indexExpression": {
																	"hexValue": "31",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2525:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 980,
																			"name": "dex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "2499:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 982,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2503:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2499:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 979,
																	"name": "IUNIFORK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2490:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																		"typeString": "type(contract IUNIFORK)"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2490:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																	"typeString": "contract IUNIFORK"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2507:13:4",
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "2490:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2490:46:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 991,
													"indexExpression": {
														"hexValue": "31",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2537:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2490:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2476:63:4"
											},
											{
												"assignments": [
													994
												],
												"declarations": [
													{
														"constant": false,
														"id": 994,
														"mutability": "mutable",
														"name": "three",
														"nameLocation": "2557:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "2549:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 993,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2549:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"baseExpression": {
														"arguments": [
															{
																"id": 1001,
																"name": "two",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "2596:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 1002,
																	"name": "allPath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2600:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																		"typeString": "address[] storage ref[] storage ref"
																	}
																},
																"id": 1004,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2608:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2600:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 996,
																			"name": "dex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "2574:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 998,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2578:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2574:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 995,
																	"name": "IUNIFORK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2565:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																		"typeString": "type(contract IUNIFORK)"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2565:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																	"typeString": "contract IUNIFORK"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2582:13:4",
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "2565:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2565:46:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 1007,
													"indexExpression": {
														"hexValue": "31",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2612:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2565:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2549:65:4"
											},
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "four",
														"nameLocation": "2632:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "2624:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1009,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2624:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"baseExpression": {
														"arguments": [
															{
																"id": 1017,
																"name": "three",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "2670:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"baseExpression": {
																	"id": 1018,
																	"name": "allPath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "2676:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage",
																		"typeString": "address[] storage ref[] storage ref"
																	}
																},
																"id": 1020,
																"indexExpression": {
																	"hexValue": "33",
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2684:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2676:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1012,
																			"name": "dex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "2648:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1014,
																		"indexExpression": {
																			"hexValue": "31",
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2652:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2648:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1011,
																	"name": "IUNIFORK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2639:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																		"typeString": "type(contract IUNIFORK)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2639:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																	"typeString": "contract IUNIFORK"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2656:13:4",
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "2639:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 1023,
													"indexExpression": {
														"hexValue": "31",
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2639:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2624:66:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1025,
															"name": "bestValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "2781:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1026,
															"name": "four",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "2791:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2827:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	{
																		"id": 1034,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "2832:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1028,
																					"name": "dex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 743,
																					"src": "2805:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1030,
																				"indexExpression": {
																					"hexValue": "31",
																					"id": 1029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2809:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2805:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1027,
																			"name": "IUNIFORK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2796:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUNIFORK_$1056_$",
																				"typeString": "type(contract IUNIFORK)"
																			}
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2796:16:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUNIFORK_$1056",
																			"typeString": "contract IUNIFORK"
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2813:13:4",
																	"memberName": "getAmountsOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1055,
																	"src": "2796:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2796:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1037,
															"indexExpression": {
																"hexValue": "31",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2838:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2796:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1038,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2780:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 856,
												"id": 1039,
												"nodeType": "Return",
												"src": "2774:67:4"
											}
										]
									},
									"functionSelector": "70b5180d",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBestPriceWithPaths",
									"nameLocation": "1408:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:2:4"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1451:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1459:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1467:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1450:25:4"
									},
									"scope": 1042,
									"src": "1399:1449:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1043,
							"src": "164:2686:4",
							"usedErrors": []
						}
					],
					"src": "32:2818:4"
				},
				"id": 4
			},
			"uniForkInterface.sol": {
				"ast": {
					"absolutePath": "uniForkInterface.sol",
					"exportedSymbols": {
						"IUNIFORK": [
							1056
						]
					},
					"id": 1057,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1044,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUNIFORK",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1056,
							"linearizedBaseContracts": [
								1056
							],
							"name": "IUNIFORK",
							"nameLocation": "68:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "91:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "110:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "105:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "105:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "144:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "127:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1047,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "127:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1048,
													"nodeType": "ArrayTypeName",
													"src": "127:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:45:5"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "207:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "193:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1051,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "193:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1052,
													"nodeType": "ArrayTypeName",
													"src": "193:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:23:5"
									},
									"scope": 1056,
									"src": "82:134:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1057,
							"src": "58:160:5",
							"usedErrors": []
						}
					],
					"src": "32:186:5"
				},
				"id": 5
			}
		}
	}
}